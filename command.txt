ssh -l chengyu login.icepp.jp -Y
Llove$851123
ssh -Y chlu@lxplus.cern.ch 
Pass:35-206118@Sugamo
{-l for logingname, -X-Y for enable some function that TBrowser could work}
chengyu@icepp.s.u-tokyo.ac.jp
35-206118@Sugamo
cheng-yu.lu@cern.ch

xed : Xcode

eog : view png

The next time you start a new session to start working, you’ll have to setup the ATLAS software environment again:
setupATLAS
Or
export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase
alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
setupATLAS

Then navigate to your build directory and setup the same analysis release:
cd ../build

bkill

//source x86_64-*/setup.sh

$ cd ~/tutorial2019/build
$ setupATLAS
$ lsetup git
$ asetup --restore


chengyu@icepp.s.u-tokyo.ac.jp
Upload : scp userkey.pem chengyu@login.icepp.jp:~

cmake -DATLAS_PACKAGE_FILTER_FILE=../package_filters.txt ../source/athena/Projects/WorkDir
make
source x86_64-centos7-gcc62-opt/setup.sh

git remote add upstream https://git@gitlab.cern.ch:7999/atlas/athena.git

cd ../../build
cmake ../source/athena/Projects/WorkDir
make
source x86_64-centos7-gcc62-opt/setup.sh 

ssh -Y chlu@lxplus.cern.ch   



ServiceMgr.EventSelector.InputCollections = [
    "/home/chlu/data2082d/tutorial2019/DxAODs/data18_13TeV.00352448.physics_Main.deriv.DAOD_STDM3.f938_m1979_p3583/DAOD_STDM3.14503110._000001.pool.root.1"
]


git atlas init-workdir ssh://git@gitlab.cern.ch:7999/chlu/athena.git 

git atlas init-workdir ssh://git@gitlab.cern.ch:7999/chlu/athena.git

ATLASでデータ保存に使われる単位はMeV, ns, mm, radianを使います。MeVは実際の物理解析を行うには小さいユニットですが、検出器のアプトプットを考えるとこの程度が妥当です。


cd ../build/
cmake ../source
make
source x86_64-centos7-gcc8-opt/setup.sh
cd ../run
athena.py ./MyAnalysisAlg_options.py 2>&1 | tee test.log

make >& out.dat
ZZ -> e mu
WW-> e + nutrino 


scp chengyu@login.icepp.jp:~/paper/sjet_ljet/sjet_ljet_png/output/pt_eta/allfile/allfile.root .






rm -f log
cat log_{1..100} > log

rm -f Run15.root

source /home/software/root/bin/thisroot.sh

hadd Run15.root Run15_*.root
hadd Run15.root Run15_*.root



TFile* data_weight = new TFile("/home/chengyu/paper/sjet_ljet/sjet_ljet_png/output/pt_eta/allfile/output/comare.root");
  TH2D* h2_compare = (TH2D*)data_weight->Get(“h2_compare");

float weight = h2_compare->GetBinContent(h2_quark_pt_eta->GetXaxis()->FindBin(jet_pt), h2_quark_pt_eta->GetYaxis()->FindBin(jet_eta));
















root　/gpfs/fs7001/jtanaka/AJPhysicsChallenge/Signal/mc16_13TeV.999999.PowhegPythia8EvtGen_CT10_AZNLOCTEQ6L1_ggH411W2_inclUniBR.DAOD_SUSY1.p3990/DAOD_SUSY1.test.pool.root
root [2] CollectionTree->Print()
Print tree to check
CollectionTree->Draw(“ElectronsAuxDyn.DFCommonElectronsLHLoose")
Check the interior




Shallow copy 用法　
std::pair<xAOD::ElectronContainer*, xAOD::ShallowAuxContainer*> shallowcopy = xAOD::shallowCopyContainer(*electronContainer);
  auto copy = shallowcopy.first;
  auto copyaux = shallowcopy.second;
  bool setLinks = xAOD::setOriginalObjectLink(*electronContainer, *copy);
  if (!setLinks) {
  ATH_MSG_WARNING("Failed to set original object links on ");
  }*/



////
JetCalibTools を MyAnalysisAlg_options.py に書く形式で走らせることができたので、共有しておきます。

	MyAnalysisExample/MyAnalysisAlg.h:
ToolHandle<IJetCalibrationTool> m_jetCalitool;
のように宣言。

	src/MyAnalysisAlg.cxx
constructorでは
  , m_jetCalitool("JetCalibrationTool/myCalibTool", this)
のようにinitializeして、他のtoolと同じように
declareProperty("JetCalibTool",m_jetCalitool, "The private jet calibration");
と書く。
initialize()内では、
ATH_CHECK(m_jetCalitool.retrieve ());
のようにする。

	MyAnalysisAlg_options.py
from JetCalibTools.JetCalibToolsConf import JetCalibrationTool
myAnaAlg.JetCalibTool = JetCalibrationTool("myCalibTool",
                                           JetCollection="AntiKt4EMPFlow",
                                           ConfigFile="JES_MC16Recommendation_Consolidated_PFlow_Apr2019_Rel21.config",
                                           CalibSequence="JetArea_Residual_EtaJES_GSC_Smear",
                                           IsData=False)
のようにする。

cd /cvmfs/atlas.cern.ch/repo/sw/software/21.2/AthAnalysis/21.2.79/InstallArea/x86_64-slc6-gcc62-opt
のディレクトリで
find . -name "BTaggingSelectionTool*"
Can find where the BTaggingslectiontool is 

ami
もしくは login.icepp.jp 上で、
setupATLAS
lsetup pyami
voms-proxy-init -voms atlas
で設定をした後、
leo851123
(voms-proxy-info -all) 看權限
ami show dataset info mc16_13TeV.364100.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV0_70_CVetoBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990



Background : 
Zmumu: mc16_13TeV.*.Sherpa_221_NNPDF30NNLO_Zmumu_*
Zee: mc16_13TeV.*.Sherpa_221_NNPDF30NNLO_Zee_*
Ztautau: mc16_13TeV.*.Sherpa_221_NNPDF30NNLO_Ztautau_*
Wmunu: mc16_13TeV.*.Sherpa_221_NNPDF30NNLO_Wmunu_*
Wenu: mc16_13TeV.*.Sherpa_221_NNPDF30NNLO_Wenu_*
Wtaunu: mc16_13TeV.*.Sherpa_221_NNPDF30NNLO_Wtaunu*
ttbar: mc16_13TeV.*.PhPy8EG_A14_ttbar_hdamp258p75*

ami show dataset info

cross*genfilteff*kFactor

Zmumu
CVetoBVeto(0~70):1981.7*0.82152*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364100.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV0_70_CVetoBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19539065._000011.pool.root.1

CFilterBVeto(0~70):1982.6*0.11357*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364101.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV0_70_CFilterBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19519312._000086.pool.root.1

BFilter(0~70):1981.8*0.065853*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364102.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV0_70_BFilter.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19502483._000034.pool.root.1



CVetoBVeto(70~140):109.07*0.68831*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364103.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV70_140_CVetoBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19512496._000069.pool.root.1

CFilterBVeto(70~140):108.99*0.19451*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364104.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV70_140_CFilterBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19494937._000021.pool.root.1

BFilter(70~140):109.03*0.11735*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364105.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV70_140_BFilter.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19494961._000049.pool.root.1

CVetoBVeto(140~280):39.892*0.61205*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364106.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV140_280_CVetoBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19513614._000001.pool.root.1


CFilterBVeto(140~280):39.847*0.23347*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364107.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV140_280_CFilterBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19498228._000036.pool.root.1

BFilter(140~280):39.877*0.15579*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364108.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV140_280_BFilter.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19548385._000075.pool.root.1

CVetoBVeto(280~500):8.522*0.56046*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364109.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV280_500_CVetoBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19543172._000011.pool.root.1

CFilterBVeto(280~500):8.5194*0.26621*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364110.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV280_500_CFilterBVeto.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19520419._000022.pool.root.1

BFilter(280~500):8.5301*0.17666*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364111.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV280_500_BFilter.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990/DAOD_SUSY1.19538614._000006.pool.root.1

500~1000:1.7876*1*0.9751//
mc16_13TeV.364112.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV500_1000.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990

Above 1000:0.1476*1*0.9751//
mc16_13TeV.364113.Sherpa_221_NNPDF30NNLO_Zmumu_MAXHTPTV1000_E_CMS.deriv.DAOD_SUSY1.e5271_s3126_r10201_p3990

Zee
CVetoBVeto(0~70):1982.8*0.82120*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364114.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV0_70_CVetoBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19521384._000054.pool.root.1

CFilterBVeto(0~70):1981.7*0.11367*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364115.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV0_70_CFilterBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19509447._000012.pool.root.1

BFilter(0~70):1981.9*0.065697*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364116.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV0_70_BFilter.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19548428._000049.pool.root.1

CVetoBVeto(70~140):110.71*0.69362*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364117.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV70_140_CVetoBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19495561._000024.pool.root.1

CFilterBVeto(70~140):110.47*0.19130*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364118.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV70_140_CFilterBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19532038._000001.pool.root.1


BFilter(70~140):110.53*0.11587*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364119.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV70_140_BFilter.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19522623._000222.pool.root.1

CVetoBVeto(140~280):40.645*0.61591*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364120.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV140_280_CVetoBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19527245._000045.pool.root.1

CFilterBVeto(140~280):40.674*0.23268*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364121.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV140_280_CFilterBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19511283._000024.pool.root.1

BFilter(140~280):40.68*0.15352*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364122.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV140_280_BFilter.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19550123._000106.pool.root.1

CVetoBVeto(280~500):8.6716*0.56429*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364123.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV280_500_CVetoBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19533103._000015.pool.root.1

CFilterBVeto(280~500):8.6698*0.26616*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364124.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV280_500_CFilterBVeto.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19536537._000001.pool.root.1

BFilter(280~500):8.6801*0.17632*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364125.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV280_500_BFilter.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990/DAOD_SUSY1.19498438._000040.pool.root.1

500~1000:1.8089*1*0.9751//
mc16_13TeV.364126.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV500_1000.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990

above1000 : 0.14881*1*0.9751//
mc16_13TeV.364127.Sherpa_221_NNPDF30NNLO_Zee_MAXHTPTV1000_E_CMS.deriv.DAOD_SUSY1.e5299_s3126_r10201_p3990

Ztautau
CVetoBVeto(0~70):1982.6*0.82105*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364128.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV0_70_CVetoBVeto.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19535084._000017.pool.root.1

CFilterBVeto(0~70):1981.9*0.11359*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364129.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV0_70_CFilterBVeto.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19504266._000038.pool.root.1

BFilter(0~70):1982*0.065773*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364130.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV0_70_BFilter.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19532637._000068.pool.root.1


CVetoBVeto(70~140):110.72*0.69313*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364131.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV70_140_CVetoBVeto.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19538908._000002.pool.root.1

CFilterBVeto(70~140):110.46*0.18905*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364132.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV70_140_CFilterBVeto.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19501550._000004.pool.root.1

BFilter(70~140):110.68*0.12001*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364133.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV70_140_BFilter.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19528682._000013.pool.root.1

CVetoBVeto(140~280):40.756*0.61697*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364134.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV140_280_CVetoBVeto.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19543330._000055.pool.root.1

CFilterBVeto(140~280):40.71*0.23420*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364135.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV140_280_CFilterBVeto.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19517443._000034.pool.root.1

BFilter(140~280):40.741*0.15494*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364136.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV140_280_BFilter.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19505088._000005.pool.root.1

CVetoBVeto(280~500):8.522*0.56430*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364137.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV280_500_CVetoBVeto.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990/DAOD_SUSY1.19506818._000014.pool.root.1

CFilterBVeto(280~500):8.6758*0.26759*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364138.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV280_500_CFilterBVeto.deriv.DAOD_SUSY1.e5313_s3126_r10201_p3990/DAOD_SUSY1.19548095._000044.pool.root.1

BFilter(280~500):8.6788*0.17615*0.9751//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364139.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV280_500_BFilter.deriv.DAOD_SUSY1.e5313_s3126_r10201_p3990/DAOD_SUSY1.19524503._000006.pool.root.1

500~1000:1.8075*1*0.9751//
mc16_13TeV.364140.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV500_1000.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990

Above1000:0.14821*1*0.9751//
mc16_13TeV.364141.Sherpa_221_NNPDF30NNLO_Ztautau_MAXHTPTV1000_E_CMS.deriv.DAOD_SUSY1.e5307_s3126_r10201_p3990

Wmunu
CVetoBVeto(0~70):19151*0.82460*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364156.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV0_70_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19494821._000018.pool.root.1


CFilterBVeto(0~70):19145*0.13031*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364157.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV0_70_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19515067._000063.pool.root.1

BFilter(0~70):19143*0.044209*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364158.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV0_70_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19537863._000245.pool.root.1

CVetoBVeto(70~140):945.89*0.68150*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364159.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV70_140_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19522358._000080.pool.root.1

CFilterBVeto(70~140):946.12*0.23841*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364160.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV70_140_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19548691._000046.pool.root.1

BFilter(70~140):944.95*0.084077*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364161.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV70_140_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19501449._000124.pool.root.1

CVetoBVeto(140~280):339.73*0.60009*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364162.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV140_280_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19517314._000014.pool.root.1

CFilterBVeto(140~280):339.8*0.29172*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364163.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV140_280_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19526690._000024.pool.root.1

BFilter(140~280):339.68*0.11111*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364164.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV140_280_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19537993._000320.pool.root.1

CVetoBVeto(280~500):72.084*0.54738*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364165.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV280_500_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19550628._000002.pool.root.1

CFilterBVeto(280~500):72.103*0.32005*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364166.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV280_500_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19543004._000040.pool.root.1

BFilter(280~500):72.063*0.13720*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364167.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV280_500_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19501720._000012.pool.root.1

500~1000:15.008*1*0.9702//
mc16_13TeV.364168.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV500_1000.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990


Above 1000:1.2349*1*0.9702//
mc16_13TeV.364169.Sherpa_221_NNPDF30NNLO_Wmunu_MAXHTPTV1000_E_CMS.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990

Wenu
CVetoBVeto(0~70):19153*0.82457*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364170.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV0_70_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19525890._000006.pool.root.1

CFilterBVeto(0~70):19145*0.13102*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364171.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV0_70_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19534807._000058.pool.root.1

BFilter(0~70):19143*0.044183*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364172.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV0_70_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19548816._000040.pool.root.1

CVetoBVeto(70~140):945.69*0.68025*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364173.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV70_140_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19548201._000122.pool.root.1

CFilterBVeto(70~140):946.37*0.24282*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364174.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV70_140_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19506981._000004.pool.root.1

BFilter(70~140):945.63*0.083353*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364175.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV70_140_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19536986._000164.pool.root.1

CVetoBVeto(140~280):339.75*0.59652*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364176.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV140_280_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19542240._000076.pool.root.1

CFilterBVeto(140~280):339.8*0.28804*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364177.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV140_280_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19515390._000038.pool.root.1

BFilter(140~280):339.7*0.11088*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364178.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV140_280_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19508402._000025.pool.root.1

CVetoBVeto(280~500):72.077*0.54800*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364179.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV280_500_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19536008._000021.pool.root.1

CFilterBVeto(280~500):72.105*0.32017*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364180.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV280_500_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19501986._000023.pool.root.1

BFilter(280~500):72.077*0.13755*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364181.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV280_500_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19543078._000043.pool.root.1

500~1000 :15.05*1*0.9702//
mc16_13TeV.364182.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV500_1000.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990

Above 1000:1.2344*1*0.9702//
mc16_13TeV.364183.Sherpa_221_NNPDF30NNLO_Wenu_MAXHTPTV1000_E_CMS.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990

Wtaunu
CVetoBVeto(0~70):19155*0.82462*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364184.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV0_70_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19526486._000026.pool.root.1

CFilterBVeto(0~70):19154*0.12957*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364185.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV0_70_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19532615._000063.pool.root.1

BFilter(0~70):19152*0.045076*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364186.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV0_70_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19514435._000112.pool.root.1

CVetoBVeto(70~140):945.58*0.68329*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364187.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV70_140_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19497898._000150.pool.root.1

CFilterBVeto(70~140):946.49*0.24245*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364188.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV70_140_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19508076._000148.pool.root.1

BFilter(70~140):945.87*0.086159*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364189.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV70_140_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19502277._000066.pool.root.1

CVetoBVeto(140~280):339.69*0.59821*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364190.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV140_280_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19549123._000085.pool.root.1

CFilterBVeto(140~280):339.84*0.29032*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364191.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV140_280_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19497148._000016.pool.root.1
白色的

BFilter(140~280):339.68*0.11153*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364192.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV140_280_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19514606._000062.pool.root.1

CVetoBVeto(280~500):72.078*0.56172*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364193.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV280_500_CVetoBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19517155._000012.pool.root.1

CFilterBVeto(280~500):71.99*0.31984*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364194.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV280_500_CFilterBVeto.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19546558._000015.pool.root.1

BFilter(280~500):71.944*0.13604*0.9702//
/home/saito/datafiles/DAOD_SUSY1/AJMLChallenge/mc16_13TeV.364195.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV280_500_BFilter.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990/DAOD_SUSY1.19543454._000048.pool.root.1

500~1000:15.052*1*0.9702//
mc16_13TeV.364196.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV500_1000.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990

above 1000:1.2342*1*0.9702
mc16_13TeV.364197.Sherpa_221_NNPDF30NNLO_Wtaunu_MAXHTPTV1000_E_CMS.deriv.DAOD_SUSY1.e5340_s3126_r10201_p3990

Ttbar:729.77*0.54382*1.13975636159//
/gpfs/fs7001/jtanaka/AJPhysicsChallenge/Background/mc16_13TeV.410470.PhPy8EG_A14_ttbar_hdamp258p75_nonallhad.deriv.DAOD_SUSY1.e6337_s3126_r10201_p3990



Fullttbar:729.77*0.45621. (pb-1)



root [2] CollectionTree->Scan(“MET_Reference_AntiKt4EMTopoAuxDyn.name")
Can know container

bkg_input_fullttbar




import glob
datasets = glob.glob("")
ServiceMgr.EventSelector.InputCollections = datasets
theApp.EvtMax = -1 # -1 means all events


bsub -q 4h -o output.log athena.py MyAnalysisAlg_options.py

bsub -q 4h -o outputfile root -l -b -q training.C

bsub -q 4h -o test_sig.log root -l -b -q test.C

bsub -q 1d -o outputfile root -l -b -q Roofit_grid.C

Check job : 
bjobs

Check how many file in directory
ls -1 | wc -l




できたroot fileの中身を直接見るとどのようになっていますか？
root filename
でfileをrootで開いた後に
treename->Scan(“Zboson_e_0th")


jobs
とすると、表示されると思うので例えば
[1]+ emacs....
となっている場合は
kill -9 %1
とするとkillできます



Gitlab
git clone https://:@gitlab.cern.ch:8443/chlu/test.git
cd test
touch README.md
git add README.md
git commit -m "add README”
kinit chlu@CERN.CH

$ git add analysis.cxx analysis.h
$ git commit -m "adding test analysis code"
$ git pull # .gitlab-ci.yml (への変更) を取ってくる。
$ git push origin master


root -l -b -q training.C | tee logfile
TMVA::TMVAGui(“TMVA_BSMH.root”);





TMVA::TMVAGui(“TMVA_Zmumu.root");


gStyle->SetOptStat(0);


etaカットは、muonの場合は|eta|<2.5, electronの場合は|eta|<2.47（ただし1.37<|eta|<1.52は除く）とする場合が多いです。なぜ1.37<|eta|<1.52を除くのかは勉強してみてください。

met は vector sumしたもののtransverse energyで、sumetはscalar sumです。
例えば２つの粒子があって4 vectorが(E1,px1,py1,pz1), (E2,px2,py2,pz2)だとすると、
met は
sqrt{(px1+px2)**2 + (py1+py2)**2}
でsumetは、
sqrt{px1**2 + py1**2} + sqrt{px2**2 + py2**2} 
です。


.profile
source /Users/luchengyu/Downloads/root/bin/thisroot.sh


.bash_profile
export BASH_CONF="bash_profile"
source /Users/luchengyu/Downloads/root/bin/thisroot.sh


.bashrc
export BASH_CONF="bashrc"
source /Users/luchengyu/Downloads/root/bin/thisroot.sh


.zshrc
source ~/.bash_profile


dataloader->AddSignalTree(t_sig, signalWeight);
  dataloader->AddBackgroundTree(bkg_0_70_ZmumuA, (1981.7*0.82152)/752857.02);
  dataloader->AddBackgroundTree(bkg_0_70_ZmumuB, (1982.6*0.11357)/195606.96);
  dataloader->AddBackgroundTree(bkg_0_70_ZmumuC, (1981.8*0.065853)/259453.19);
  dataloader->AddBackgroundTree(bkg_70_140_ZmumuA, (109.07*0.68831)/240752.05);
  dataloader->AddBackgroundTree(bkg_70_140_ZmumuB, (108.99*0.19451)/164083.04);
  dataloader->AddBackgroundTree(bkg_70_140_ZmumuC, (109.03*0.11735)/304791.85);
  dataloader->AddBackgroundTree(bkg_140_280_ZmumuA, (39.892*0.61205)/469776.51);
  dataloader->AddBackgroundTree(bkg_140_280_ZmumuB, (39.847*0.23347)/398033.98);
  dataloader->AddBackgroundTree(bkg_140_280_ZmumuC, (39.877*0.15579)/837636.17);
  dataloader->AddBackgroundTree(bkg_280_500_ZmumuA, (8.522*0.56046)/345232.04);
  dataloader->AddBackgroundTree(bkg_280_500_ZmumuB, (8.5194*0.26621)/321686.56);
  dataloader->AddBackgroundTree(bkg_280_500_ZmumuC, (8.5301*0.17666)/584064.73);
  dataloader->AddBackgroundTree(bkg_500_1000_Zmumu, (1.7876*1)/467399.85);
  dataloader->AddBackgroundTree(bkg_E_CMS_Zmumu, (0.1476*1)/244809.70);

  dataloader->AddBackgroundTree(bkg_0_70_WmunuA, (19151*0.82460)/322490.07);
  dataloader->AddBackgroundTree(bkg_0_70_WmunuB, (19145*0.13031)/516098.86);
  dataloader->AddBackgroundTree(bkg_0_70_WmunuC, (19143*0.044209)/931959.04);
  dataloader->AddBackgroundTree(bkg_70_140_WmunuA, (945.89*0.68150)/427078.94);
  dataloader->AddBackgroundTree(bkg_70_140_WmunuB, (946.12*0.23841)/297331.49);
  dataloader->AddBackgroundTree(bkg_70_140_WmunuC, (944.95*0.084077)/325011.85);
  dataloader->AddBackgroundTree(bkg_140_280_WmunuA, (339.73*0.60009)/394176.85);
  dataloader->AddBackgroundTree(bkg_140_280_WmunuB, (339.8*0.29172)/591339.09);
  dataloader->AddBackgroundTree(bkg_140_280_WmunuC, (339.68*0.11111)/513568.21);
  dataloader->AddBackgroundTree(bkg_280_500_WmunuA, (72.084*0.54738)/727297.13);
  dataloader->AddBackgroundTree(bkg_280_500_WmunuB, (72.103*0.32005)/786500.66);
  dataloader->AddBackgroundTree(bkg_280_500_WmunuC, (72.063*0.13720)/525780.09);
  dataloader->AddBackgroundTree(bkg_500_1000_Wmunu, (15.008*1)/572383.01);
  dataloader->AddBackgroundTree(bkg_E_CMS_Wmunu, (1.2349*1)/379841.47);

Wmunu
1. . /322490.07
2. . /516098.86
3. . /931959.04
4. . /427078.94
5. . /297331.49
6. . /325011.85
7. . /394176.85
8. . /591339.09
9. . /513568.21
10. /727297.13
11. /786500.66
12. /525780.09
13. /572383.01
14. /379841.47

ttbar
  dataloader->AddBackgroundTree(bkg_ttbar, (729.77*0.54382)/3.190e+09);

fullttbar : 963878654

TMVA::TMVAGui("TMVA_Zmumu_BDT_1th.root");


Zee
1.765948.72
2.339726.00
3.658105.07
4.435203.02
5.102304.86
6.130454.55
7.561512.11
8.439364.95
9.423872.54
10.318851.10
11.128307.31
12.440470.94
13.475318.09
14.182816.89

Ztautau
1.868284.77
2.714316.37
3.543116.44
4.198600.69
5.371530.16
6.356630.99
7.514074.63
8.520893.21
9.717258.67
10.404149.03
11.242368.17
12.392295.20
13.754718.01
14.325903.21






Wenu
1.330821.82
2.888480.07
3.762949.79
4.444473.34
5.404069.66
6.255850.86
7.458066.69
8.503995.11
9.645545.68
10.428081.89
11.368294.60
12.383015.61
13.340976.13
14.402956.30

Wtaunu
1.1148703.7
2.597405.37
3.1101023.9
4.267289.10
5.250910.21
6.454828.87
7.880153.91
8.868948.72
9.1111621.1
10.411578.62
11.271234.18
12.249039.21
13.975508.77
14.367636.65





B-jet : data/sqrt(bkg) : 98.584


9.3598

Tuba 4119.57



Bkg : 5523.16
Data : 5770


Signal sumOfweifgt : 1318287.4
 
 
 
 
 
 
 
 
 例えば100イベント観測した時、その数に対する(1sigma)エラーは10になります(sqrt(100))。もし70イベントが期待されているビンで100イベント観測されたら、70から30イベント(=3sigma分布)超過しているので、「3sigmaの超過」といえます。
 
 
 120GeV
366~795 min chi/NDF = 74.3775/38=1.9573  ---status : 3

375 ~ 700  = 1.59769
346,665


50GeV:

196~605 min chi/NDF = 109.991/36=3.05531  ---status : 3 
282~675 : 43.2406/35=1.23545  ---status : 3
280~645 : 34.2872/32=1.07147 

Smaller 366,665

246~655 min chi/NDF = 43.0934/36=1.19704

286~665 min chi/NDF = 28.2388/33=0.855721
336~615 min chi/NDF = 15.4532/23=0.671877
296~875 min chi/NDF = 121.749/53=2.29715

336~765 min chi/NDF = 54.8368/38=1.44307
336~926 : 105.692/55=1.92167

296~945 min chi/NDF = 158.433/60=2.64055 
276~935 : 196.398/61=3.21963
236~375
205~426


twol_ljet

306~714
276~1000
306~1154

di largeR jet:
386~744
386~814


見たチャンネル

di-bjet

ZZ->4l.  ->fit
ZZ->2l2q.  ->fit
ZZ->2l2nu
ZZ->di Large-R jet   
ZZ->2l + large-R jet   ->fit

Minimum Supersymmetric Standard Model (MSSM)






//W
//Wboson kansei
  //lvlv
  Wlnu_tree = new TTree("WlnuTree", "Tree of Wlnulnu");
  Wlnu_tree->Branch("m_Wlnu_eta_1st", &m_Wlnu_eta_1st, "m_Wlnu_eta_1st/F");
  Wlnu_tree->Branch("m_Wlnu_pt_1st", &m_Wlnu_pt_1st, "m_Wlnu_pt_1st/F");
  Wlnu_tree->Branch("m_Wlnu_m_1st", &m_Wlnu_m_1st, "m_Wlnu_m_1st/F");
  Wlnu_tree->Branch("m_Wlnu_eta_2nd", &m_Wlnu_eta_2nd, "m_Wlnu_eta_2nd/F");
  Wlnu_tree->Branch("m_Wlnu_pt_2nd", &m_Wlnu_pt_2nd, "m_Wlnu_pt_2nd/F");
  Wlnu_tree->Branch("m_Wlnu_m_2nd", &m_Wlnu_m_2nd, "m_Wlnu_m_2nd/F");
  Wlnu_tree->Branch("m_Wlnu_met_pt",&m_Wlnu_met_pt, "m_Wlnu_met_pt/F");
  Wlnu_tree->Branch("m_Wlnu_mass",&m_Wlnu_mass, "m_Wlnu_mass/F");
  Wlnu_tree->Branch("m_mcEventWeight", &weight_Wlnu, "m_mcEventWeight/D");

  //lvqq kansei
  Wl_ljet_tree = new TTree("Wl_ljetTree", "Tree of Wlnuljet");
  Wl_ljet_tree->Branch("m_Wl_ljet_ljet_eta", &m_Wl_ljet_ljet_eta, "m_Wl_ljet_ljet_eta/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_ljet_pt", &m_Wl_ljet_ljet_pt, "m_Wl_ljet_ljet_pt/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_ljet_m", &m_Wl_ljet_ljet_m, "m_Wl_ljet_ljet_m/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_l_eta", &m_Wl_ljet_l_eta, "m_Wl_ljet_l_eta/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_l_pt", &m_Wl_ljet_l_pt, "m_Wl_ljet_l_pt/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_l_m", &m_Wl_ljet_l_m, "m_Wl_ljet_l_m/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_met_pt",&m_Wl_ljet_met_pt, "m_Wl_ljet_met_pt/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_lnu_m",&m_Wl_ljet_lnu_m, "m_Wl_ljet_lnu_m/F");
  Wl_ljet_tree->Branch("m_Wl_ljet_mass",&m_Wl_ljet_mass, "m_Wl_ljet_mass/F");
  Wl_ljet_tree->Branch("m_mcEventWeight", &weight_Wl_ljet, "m_mcEventWeight/D");

  Wl_sjet_tree = new TTree("Wl_sjetTree", "Tree of Wlnusjet");
  Wl_sjet_tree->Branch("m_Wl_sjet_sjet_eta_1st", &m_Wl_sjet_sjet_eta_1st, "m_Wl_sjet_sjet_eta_1st/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_sjet_pt_1st", &m_Wl_sjet_sjet_pt_1st, "m_Wl_sjet_sjet_pt_1st/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_sjet_m_1st", &m_Wl_sjet_sjet_m_1st, "m_Wl_sjet_sjet_m_1st/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_sjet_eta_2nd", &m_Wl_sjet_sjet_eta_2nd, "m_Wl_sjet_sjet_eta_2nd/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_sjet_pt_2nd", &m_Wl_sjet_sjet_pt_2nd, "m_Wl_sjet_sjet_pt_2nd/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_sjet_m_2nd", &m_Wl_sjet_sjet_m_2nd, "m_Wl_sjet_sjet_m_2nd/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_disjet_m", &m_Wl_sjet_disjet_m, "m_Wl_sjet_disjet_m/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_l_eta", &m_Wl_sjet_l_eta, "m_Wl_sjet_l_eta/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_l_pt", &m_Wl_sjet_l_pt, "m_Wl_sjet_l_pt/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_l_m", &m_Wl_sjet_l_m, "m_Wl_sjet_l_m/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_met_pt",&m_Wl_sjet_met_pt, "m_Wl_sjet_met_pt/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_lnu_m",&m_Wl_sjet_lnu_m, "m_Wl_sjet_lnu_m/F");
  Wl_sjet_tree->Branch("m_Wl_sjet_mass",&m_Wl_sjet_mass, "m_Wl_sjet_mass/F");
  Wl_sjet_tree->Branch("m_mcEventWeight", &weight_Wl_sjet, "m_mcEventWeight/D");

  //tquark  kansei
  tll_tree = new TTree("tllTTree", "Tree of ttbar");
  tll_tree->Branch("m_tll_dphi", &m_tll_dphi, "m_tll_dphi/F");
  tll_tree->Branch("m_tll_ljet_eta_1st", &m_tll_ljet_eta_1st, "m_tll_ljet_eta_1st/F");
  tll_tree->Branch("m_tll_ljet_pt_1st", &m_tll_ljet_pt_1st, "m_tll_ljet_pt_1st/F");
  tll_tree->Branch("m_tll_ljet_m_1st", &m_tll_ljet_m_1st, "m_tll_ljet_m_1st/F");
  tll_tree->Branch("m_tll_ljet_eta_2nd", &m_tll_ljet_eta_2nd, "m_tll_ljet_eta_2nd/F");
  tll_tree->Branch("m_tll_ljet_p_2ndt", &m_tll_ljet_pt_2nd, "m_tll_ljet_pt_2nd/F");
  tll_tree->Branch("m_tll_ljet_m_2nd", &m_tll_ljet_m_2nd, "m_tll_ljet_m_2nd/F");
  tll_tree->Branch("m_tll_mass",&m_tll_mass, "m_tll_mass/F");
  tll_tree->Branch("m_mcEventWeight", &weight_tll, "m_mcEventWeight/D");
  Kansei
  tWb_tree = new TTree("tWbTree", "Tree of tWb");
  tWb_tree->Branch("m_tWb_l_eta_1st", &m_tWb_l_eta_1st, "m_tWb_l_eta_1st/F");
  tWb_tree->Branch("m_tWb_l_pt_1st", &m_tWb_l_pt_1st, "m_tWb_l_pt_1st/F");
  tWb_tree->Branch("m_tWb_l_m_1st", &m_tWb_l_m_1st, "m_tWb_l_m_1st/F");
  tWb_tree->Branch("m_tWb_l_eta_2nd", &m_tWb_l_eta_2nd, "m_tWb_l_eta_2nd/F");
  tWb_tree->Branch("m_tWb_l_pt_2nd", &m_tWb_l_pt_2nd, "m_tWb_l_pt_2nd/F");
  tWb_tree->Branch("m_tWb_l_m_2nd", &m_tWb_l_m_2nd, "m_tWb_l_m_2nd/F");
  tWb_tree->Branch("m_tWb_met_pt", &m_tWb_met_pt, "m_tWb_met_pt/F");
  tWb_tree->Branch("m_tWb_b_eta_1st", &m_tWb_b_eta_1st, "m_tWb_b_eta_1st/F");
  tWb_tree->Branch("m_tWb_b_pt_1st", &m_tWb_b_pt_1st, "m_tWb_b_pt_1st/F");
  tWb_tree->Branch("m_tWb_b_m_1st", &m_tWb_b_m_1st, "m_tWb_b_m_1st/F");
  tWb_tree->Branch("m_tWb_b_eta_2nd", &m_tWb_b_eta_2nd, "m_tWb_b_eta_2nd/F");
  tWb_tree->Branch("m_tWb_b_pt_2nd", &m_tWb_b_pt_2nd, "m_tWb_b_pt_2nd/F");
  tWb_tree->Branch("m_tWb_b_m_2nd", &m_tWb_b_m_2nd, "m_tWb_b_m_2nd/F");
  tWb_tree->Branch("m_tWb_t_m_1st", &m_tWb_t_m_1st, "m_tWb_t_m_1st/F");
  tWb_tree->Branch("m_tWb_t_m_2nd", &m_tWb_t_m_2nd, "m_tWb_t_m_2nd/F");
  tWb_tree->Branch("m_tWb_mass",&m_tWb_mass, "m_tWb_mass/F");
  tWb_tree->Branch("m_mcEventWeight", &weight_tWb, "m_mcEventWeight/D");

  //higgs
  Hhh_tree = new TTree("HhhTree", "Tree of Hhh");
  Hhh_tree->Branch("m_Hhh_dphi", &m_Hhh_dphi, "m_Hhh_dphi/F");
  Hhh_tree->Branch("m_Hhh_b_eta_1st", &m_Hhh_b_eta_1st, "m_Hhh_b_eta_1st/F");
  Hhh_tree->Branch("m_Hhh_b_pt_1st", &m_Hhh_b_pt_1st, "m_Hhh_b_pt_1st/F");
  Hhh_tree->Branch("m_Hhh_b_m_1st", &m_Hhh_b_m_1st, "m_Hhh_b_m_1st/F");
  Hhh_tree->Branch("m_Hhh_b_eta_2nd", &m_Hhh_b_eta_2nd, "m_Hhh_b_eta_2nd/F");
  Hhh_tree->Branch("m_Hhh_b_pt_2nd", &m_Hhh_b_pt_2nd, "m_Hhh_b_pt_2nd/F");
  Hhh_tree->Branch("m_Hhh_b_m_2nd", &m_Hhh_b_m_2nd, "m_Hhh_b_m_2nd/F");
  Hhh_tree->Branch("m_Hhh_b_eta_3rd", &m_Hhh_b_eta_3rd, "m_Hhh_b_eta_3rd/F");
  Hhh_tree->Branch("m_Hhh_b_pt_3rd", &m_Hhh_b_pt_3rd, "m_Hhh_b_pt_3rd/F");
  Hhh_tree->Branch("m_Hhh_b_m_3rd", &m_Hhh_b_m_3rd, "m_Hhh_b_m_3rd/F");
  Hhh_tree->Branch("m_Hhh_b_eta_4th", &m_Hhh_b_eta_4th, "m_Hhh_b_eta_4th/F");
  Hhh_tree->Branch("m_Hhh_b_pt_4th", &m_Hhh_b_pt_4th, "m_Hhh_b_pt_4th/F");
  Hhh_tree->Branch("m_Hhh_b_m_4th", &m_Hhh_b_m_4th, "m_Hhh_b_m_4th/F");
  Hhh_tree->Branch("m_Hhh_h_m_1st", &m_Hhh_h_m_1st, "m_Hhh_h_m_1st/F");
  Hhh_tree->Branch("m_Hhh_h_m_2nd", &m_Hhh_h_m_2nd, "m_Hhh_h_m_2nd/F");
  Hhh_tree->Branch("m_Hhh_mass",&m_Hhh_mass, "m_Hhh_mass/F");
  Hhh_tree->Branch("m_mcEventWeight", &weight_Hhh, “m_mcEventWeight/D");

//
 tljet_b_tree = new TTree("tljet_bTree", "Tree of L-Rjet + 2b");
  tljet_b_tree->Branch("m_tljet_b_l_eta_1st", &m_tljet_b_l_eta_1st, "m_tljet_b_l_eta_1st/F");
  tljet_b_tree->Branch("m_tljet_b_l_pt_1st", &m_tljet_b_l_pt_1st, "m_tljet_b_l_pt_1st/F");
  tljet_b_tree->Branch("m_tljet_b_l_m_1st", &m_tljet_b_l_m_1st, "m_tljet_b_l_m_1st/F");
  tljet_b_tree->Branch("m_tljet_b_met_pt", &m_tljet_b_met_pt, "m_tljet_b_met_pt/F");
 tljet_b_tree->Branch("m_tljet_b_Wlnu_pt", &m_tljet_b_lnu_pt, "m_tljet_b_lnu_pt/F");
  tljet_b_tree->Branch("m_tljet_b_lejt_eta", &m_tljet_b_ljet_eta, "m_tljet_b_ljet_eta/F");
  tljet_b_tree->Branch("m_tljet_b_lejt_pt", &m_tljet_b_ljet_pt, "m_tljet_b_ljet_pt/F");
  tljet_b_tree->Branch("m_tljet_b_lejt_m", &m_tljet_b_ljet_m, "m_tljet_b_ljet_m/F");
  tljet_b_tree->Branch("m_tljet_b_b_eta_1st", &m_tljet_b_b_eta_1st, "m_tljet_b_b_eta_1st/F");
  tljet_b_tree->Branch("m_tljet_b_b_pt_1st", &m_tljet_b_b_pt_1st, "m_tljet_b_b_pt_1st/F");
  tljet_b_tree->Branch("m_tljet_b_b_m_1st", &m_tljet_b_b_m_1st, "m_tljet_b_b_m_1st/F");
  tljet_b_tree->Branch("m_tljet_b_b_eta_2nd", &m_tljet_b_b_eta_2nd, "m_tljet_b_b_eta_2nd/F");
  tljet_b_tree->Branch("m_tljet_b_b_pt_2nd", &m_tljet_b_b_pt_2nd, "m_tljet_b_b_pt_2nd/F");
  tljet_b_tree->Branch("m_tljet_b_b_m_2nd", &m_tljet_b_b_m_2nd, "m_tljet_b_b_m_2nd/F");
  tljet_b_tree->Branch("m_tljet_b_mass",&m_tljet_b_mass, "m_tljet_b_mass/F");
  tljet_b_tree->Branch("m_mcEventWeight", &weight_tljet_b, "m_mcEventWeight/D");
  
  ttwoljet_b_tree = new TTree("ttwoLjet_bTree", "Tree of 2 L-Rjet + 2b");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_lejt_eta_1st", &m_ttwoljet_b_ljet_eta_1st, "m_ttwoljet_b_ljet_eta_1st/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_lejt_pt_1st", &m_ttwoljet_b_ljet_pt_1st, "m_ttwoljet_b_ljet_pt_1st/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_lejt_m_1st", &m_ttwoljet_b_ljet_m_1st, "m_ttwoljet_b_ljet_m_1st/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_lejt_eta_2nd", &m_ttwoljet_b_ljet_eta_2nd, "m_ttwoljet_b_ljet_eta_2nd/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_lejt_pt_2nd", &m_ttwoljet_b_ljet_pt_2nd, "m_ttwoljet_b_ljet_pt_2nd/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_lejt_m_2nd", &m_ttwoljet_b_ljet_m_2nd, "m_ttwoljet_b_ljet_m_2nd/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_b_eta_1st", &m_ttwoljet_b_b_eta_1st, "m_ttwoljet_b_b_eta_1st/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_b_pt_1st", &m_ttwoljet_b_b_pt_1st, "m_ttwoljet_b_b_pt_1st/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_b_m_1st", &m_ttwoljet_b_b_m_1st, "m_ttwoljet_b_b_m_1st/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_b_eta_2nd", &m_ttwoljet_b_b_eta_2nd, "m_ttwoljet_b_b_eta_2nd/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_b_pt_2nd", &m_ttwoljet_b_b_pt_2nd, "m_ttwoljet_b_b_pt_2nd/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_b_m_2nd", &m_ttwoljet_b_b_m_2nd, "m_ttwoljet_b_b_m_2nd/F");
  ttwoljet_b_tree->Branch("m_ttwoljet_b_mass",&m_ttwoljet_b_mass, "m_ttwoljet_b_mass/F");
  ttwoljet_b_tree->Branch("m_mcEventWeight", &weight_ttwoljet_b, "m_mcEventWeight/D");





Htt problem


Why b 20 GeV


191~1400 min chi/NDF = 105.979/37=2.86431  ---status : 0
211~1400 min chi/NDF = 101.708/36=2.82523  ---status : 0




InDet::InDetTrackSelectionTool m_trkSelTool("TrackSelTool");
  ANA_CHECK (m_trkSelTool.setProperty("CutLevel", "Loose"));
  ANA_CHECK (m_trkSelTool.initialize());

const xAOD::Jet* jet = nullptr;
  const xAOD::VertexContainer* pVertices = 0;
  const xAOD::Vertex* PV = GetPV(pVertices);
  std::vector<const xAOD::TrackParticle*> tracks = jet->getAssociatedObjects<xAOD::TrackParticle>("GhostTrack");
  for ( auto track : tracks ){
    if ( track->pt() < 500. ) continue; 
    if ( !m_trkSelTool.accept(*track) ) continue;
    float d0 = fabs(track->d0());
    float z0sinTheta = fabs( track->z0() + track->vz() - PV->z() )*sin(track->theta());
    }





EtaInterCalxAODAnalysis

bsub -q 1d -o bsub.output1.log ATestRun_eljob.py —submission-dir=bsubDir1


/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364700.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ0WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364701.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ1WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364702.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ2WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364703.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ3WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364704.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ4WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364705.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ5WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364706.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ6WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364707.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ7WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364708.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ8WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364709.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ9WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364710.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ10WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364711.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ11WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288

/gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364712.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ12WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288





We can find make data in x86_64-centos7-gcc8-opt which is converted into binary code


JVFとJVTはpileup jetを落とすためのcutのことです。JVTのほうがより高級です。

EtaInterCalAnalysis rootfilename (if an analysis script is converted into binary file)

ANA_CHECK (evtStore()->retrieve (eventInfo, “AntiKt4EMPFlowJets"));



const xAOD::JetContainer* sjetContainer = nullptr;
ATH_CHECK(evtStore()->retrieve(sjetContainer, "AntiKt4EMPFlowJets_BTagging201903"));
 ATH_MSG_DEBUG("jets successfully retrieved");
 ATH_MSG_DEBUG("# of jets = " << sjetContainer->size());
 std::vector<TLorentzVector> sjets;
 unsigned int nsJets = 0;


bsub -q 1d -o output.log  EtaInterCalAnalysis /gpfs/fs7001/saito/datafiles/DAOD_JETM1/mc16_13TeV.364700.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ0WithSW.deriv.DAOD_JETM1.e7142_s3126_r10201_p4288/*root*



//try
	/*InDet::InDetTrackSelectionTool m_trkSelTool("TrackSelTool");
	m_trkSelTool.setProperty("CutLevel", "Loose");
	m_trkSelTool.initialize();
	test1 = 0;
	std::cout << "------------I am at status place------------" << std::endl; 
	const xAOD::JetContainer* jetContainer = nullptr;
	event.retrieve(jetContainer, "AntiKt4EMPFlowJets");
	for(const xAOD::Jet* jet : *jetContainer){
	  std::cout << "---------I am at jet loop--------" << std::endl;
	  test1 = jet->pt();
	  gq_tree->Fill();
	  std::vector<const xAOD::TrackParticle*> tracks = jet->getAssociatedObjects<xAOD::TrackParticle>("GhostTrack");
	  for ( auto track : tracks ){
	    std::cout << "-------I am in tracks-------" << std::endl; 
	    //if ( track->pt() < 500. ) continue;
	    //if ( !m_trkSelTool.accept(*track) ) continue;
	    float d0 = fabs(track->d0());
	    float z0sinTheta = fabs( track->z0() + track->vz() - PV->z() )*sin(track->theta());
	    std::cout << "---------test----------" << test1 << std::endl;
	  }
	  }*/



928

2142


//
float mcEventWeight;
float m_sumOfWeights;

	TH1D* quark_50_100;
	TH1D* quark_400_500;
	TH1D* quark_1200_1500;
	TH1D* gluon_50_100;
	TH1D* gluon_400_500;
	TH1D* gluon_1200_1500;






L1310
quark_50_100->Fill(m_j1_NumTrkPt500);

L1905
gluon_50_100->Fill(n_track_1st);

test_NumT



4511
3409
22557

jetAlgo = AntiKt4EMPFlow

float n_track_j1;
        float n_track_j2;
	float trackwidth_j1;
	float trackwidth_j2;
	float trackC1_j1;
	float trackC1_j2;
           double pt_j1;
	double pt_j2;
	double label_j1;
	double label_j2;

std::vector<const xAOD::IParticle*> jettracks;
        jet->getAssociatedObjects<xAOD::IParticle>(xAOD::JetAttribute::GhostTrack,jettracks);

bsub -q 1d -o output.log EtaInterCalAnalysis /home/saito/datafiles/DAOD_JETM1/custom/no_thinning.pool.root.1


bsub -q 1d -o output.log EtaInterCalAnalysis /home/saito/datafiles/DAOD_JETM1/custom/nod0_addshared.pool.root.1




ditau : BDT : 0.0565657 

xAOD run for n_track


1.mc16_13TeV.364700.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ0WithSW.recon.AOD.e7142_s3126_r10201

2.mc16_13TeV.364701.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ1WithSW.recon.AOD.e7142_s3126_r10201

3.mc16_13TeV.364702.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ2WithSW.recon.AOD.e7142_s3126_r10201

4.mc16_13TeV.364703.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ3WithSW.recon.AOD.e7142_s3126_r10201

5.mc16_13TeV.364704.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ4WithSW.recon.AOD.e7142_s3126_r10201

6.mc16_13TeV.364705.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ5WithSW.recon.AOD.e7142_s3126_r10201

7.mc16_13TeV.364706.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ6WithSW.recon.AOD.e7142_s3126_r10201

8.mc16_13TeV.364707.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ7WithSW.recon.AOD.e7142_s3126_r10201

9.mc16_13TeV.364708.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ8WithSW.recon.AOD.e7142_s3126_r10201

10.mc16_13TeV.364709.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ9WithSW.recon.AOD.e7142_s3126_r10201

11.mc16_13TeV.364710.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ10WithSW.recon.AOD.e7142_s3126_r10201

12.mc16_13TeV.364711.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ11WithSW.recon.AOD.e7142_s3126_r10201

13.mc16_13TeV.364712.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ12WithSW.recon.AOD.e7142_s3126_r10201




bsub -q 1d -o output.log EtaInterCalAnalysis /home/saito/datafiles/AOD/QGtagging/mc16_13TeV.364700.Pythia8EvtGen_A14NNPDF23LO_jetjet_JZ0WithSW.recon.AOD.e7142_s3126_r10201/*root*

std::cout << "----L830----" << std::endl;
ljet_tree
  if(l1.Pt()<50) continue;
  if(l1.M()>111) continue;
  if(l1.M()<71) continue;

twol_ljet_tree
  pt>20
  Muon eta <2.5
  Electron eta <2.46. &&. 1.37<eta<1.52

twol_sjet_tree
  Pt > 30 
 71 < 2q < 111


Leptonic tau

Tau -> lepton + nu


12/15
40:00
48:00




Quark 90% efficiency = BDT < 0.092
Quark 80% = BDT < 0.037
Quark 50% = BDT < -0.091

Gluon 90% = BDT > -0.076
Gluon 80% = BDT > -0.013
Gluon 50% = BDT > 0.088

Gluon 90% = n_track > 9
Gluon 90% = trackwidth > 0.025
Gluon 90% = trackC1 > 0.179

pT BDT(gluon 90%)
20~30 = BDT> -0.075
30~40 = BDT > -0.07
40~60 = > -0.063
60~100 = >-0.059
100~180 = > -0.079
180~320 = >-0.074
320~380 = > -0.073
380~520 = > -0.073
520~580 = > -0.072
580~820 = > -0.077
820~980 = > -0.075
1000~1200 = > -0.079
1200~1400 = > -0.081








pT n_track (90%)
20~30 = > 2 
30~40 =  > 3
40~60 = > 4
60~100 = > 5
100~180 = > 8
180~320 = > 10
320~380 = > 12
380~520 = > 13
520~580 = > 14
580~820 = > 15
820~980 = > 16
1000~1200 = > 17
1200~1400 = > 17


pT trackwidth (90%)
20~30 = > 0.083
30~40 =  > 0.077
40~60 = > 0.065
60~100 = > 0.056
100~180 = > 0.043
180~320 = > 0.033
320~380 = > 0.028
380~520 = > 0.025
520~580 = > 0.024
580~820 = > 0.022
820~980 = > 0.02
1000~1200 = > 0.019
1200~1400 = > 0.018

pT trackC1 (90%)
20~30 = > 0.15
30~40 = > 0.18
40~60 = > 0.2
60~100 = > 0.2
100~180 = > 0.2
180~320 = > 0.2
320~380 = > 0.19
380~520 = > 0.19
520~580 = > 0.18
580~820 = > 0.18
820~980 = > 0.17
1000~1200 = > 0.16
1200~1400 = > 0.16














////
Eta BDT(gluon 90%)
0~0.2 = > -0.074
0.2~0.4 = > -0.07
0.4~0.6 = > -0.07
0.6~0.8 = > -0.075
0.8~1.0 = > -0.079
1.0~1.2 = > -0.076
1.2~1.4 = > -0.076
1.4~1.6 = > -0.089
1.6~1.8 = > -0.079
1.8~2.0 = > -0.09

Eta n_track (90%)
0~0.2 = > 14
0.2~0.4 = > 14
0.4~0.6 = > 14
0.6~0.8 = > 14
0.8~1.0 = > 13
1.0~1.2 = > 13
1.2~1.4 = > 12
1.4~1.6 = > 11
1.6~1.8 = > 10
1.8~2.0 = > 10

Eta trackwidth (90%)
0~0.2 = > 0.023
0.2~0.4 = > 0.023
0.4~0.6 = > 0.023
0.6~0.8 = > 0.024
0.8~1.0 = > 0.025
1.0~1.2 = > 0.027
1.2~1.4 = > 0.029
1.4~1.6 = > 0.032
1.6~1.8 = > 0.034
1.8~2.0 = > 0.036

eta trackC1 (90%)
0~0.2 = > 0.17
0.2~0.4 = > 0.17
0.4~0.6 = > 0.176
0.6~0.8 = > 0.178
0.8~1.0 = > 0.182
1.0~1.2 = > 0.184
1.2~1.4 = > 0.189
1.4~1.6 = > 0.191
1.6~1.8 = > 0.192
1.8~2.0 = > 0.195












///////////
pT BDT(quark 90%)
20~30 = < 0.026
30~40 = < 0.05
40~60 = < 0.076
60~100 = < 0.09
100~180 = < 0.099
180~320 = < 0.101
320~380 = < 0.097
380~520 = < 0.095
520~580 = < 0.098
580~820 = < 0.095
820~980 = < 0.09
1000~1200 = < 0.091
1200~1400 = < 0.083

pT n_track(quark 90%).
20~30 = < 7
30~40 = < 8
40~60 = < 10
60~100 = < 12
100~180 = < 15
180~320 = < 18
320~380 = < 21
380~520 = < 23
520~580 = < 25
580~820 = < 27
820~980 = < 29
1000~1200 = < 31
1200~1400 = < 32

pT trackwidth(quark 90%)
20~30 = < 0.209
30~40 = < 0.188
40~60 = < 0.16
60~100 = < 0.141
100~180 = < 0.123
180~320 = < 0.108
320~380 = < 0.1
380~520 = < 0.097
520~580 = < 0.096
580~820 = < 0.094
820~980 = < 0.091
1000~1200 = < 0.09
1200~1400 = < 0.09

pT trackC1(quark 90%)
20~30 = < 0.29
30~40 = < 0.296
40~60 = < 0.29
60~100 = < 0.286
100~180 = < 0.284
180~320 = < 0.277
320~380 = < 0.274
380~520 = < 0.27
520~580 = < 0.269
580~820 = < 0.267
820~980 = < 0.265
1000~1200 = < 0.264
1200~1400 = < 0.262
////////////////
Eta BDT(quark 90%)
0~0.2 = < 0.093
0.2~0.4 = < 0.096
0.4~0.6 = < 0.093
0.6~0.8 = < 0.087
0.8~1.0 = < 0.086
1.0~1.2 = < 0.088
1.2~1.4 = < 0.094
1.4~1.6 = < 0.088
1.6~1.8 = < 0.092
1.8~2.0 = < 0.083

Eta n_track(quark 90%)
0~0.2 = < 31
0.2~0.4 = < 31
0.4~0.6 = < 31
0.6~0.8 = < 31
0.8~1.0 = < 30
1.0~1.2 = < 29
1.2~1.4 = < 29
1.4~1.6 = < 26
1.6~1.8 = < 25
1.8~2.0 = < 24

Eta trackwidth(quark 90%)
0~0.2 = < 0.094
0.2~0.4 = < 0.094
0.4~0.6 = < 0.095
0.6~0.8 = < 0.094
0.8~1.0 = < 0.096
1.0~1.2 = < 0.097
1.2~1.4 = < 0.099
1.4~1.6 = < 0.102
1.6~1.8 = < 0.106
1.8~2.0 = < 0.108

Eta trackC1(quark 90%)
0~0.2 = < 0.264
0.2~0.4 = < 0.265
0.4~0.6 = < 0.265
0.6~0.8 = < 0.266
0.8~1.0 = < 0.267
1.0~1.2 = < 0.267
1.2~1.4 = < 0.27
1.4~1.6 = < 0.271
1.6~1.8 = < 0.274
1.8~2.0 = < 0.274



AJ challenge 
At DataSample/fitmethod dictionary

ditau
dilarge-jet
2l-sjet
2l-ljet



ltau_htau_tree

Float_t m_ltau_htau_dphi;

TString tree_address = "tllTTree";
  TString tree_path = "m_tll_mass";
  TString str_save = “h_tllmass”;


std::vector<TLorentzVector> Wl_sjets;
  for(size_t i=0; i<sjets.size(); i++){
    auto l1 = sjets.at(i);
    if(l1.Pt()<20) continue;
    Wl_sjets.push_back(l1);
  }

    
Wl_sjets
tll_ljets
tWl_ljets
tWb_bjets
Wlnu_leptons
tWb_bjets
Wboson_2sjet




size_t

1WmunuA


2WmunuA
2WmunuB
2WmunuC



bsub -q 4h -o outputfile root -l -b -q training.C


>-0.092. data —- 0.43.  sig—-0.9

Smallest sig/sqrt(data) >-0.003 data—-0.1025  sig—-0.5534





tWb_tree->Branch("m_tWb_Wboson_m_1st", &m_tWb_Wboson_m_1st, "m_tWb_Wboson_m_1st/F");
  tWb_tree->Branch("m_tWb_Wboson_m_2nd", &m_tWb_Wboson_m_2nd, “m_tWb_Wboson_m_2nd/F");


tljet_b_tree->Branch("m_tljet_b_Wbson_m", &m_tljet_b_Wbson_m, “m_tljet_b_Wbson_m/F");

tljetWb_tree->Branch("m_tljetWb_Wboson_m", &m_tljetWb_Wboson_m, “m_tljetWb_Wboson_m/F");

tW2qbWb_tree->Branch("m_tW2qbWb_Wboson_m", &m_tW2qbWb_Wboson_m, "m_tW2qbWb_Wboson_m/F");




pic_tWlbW2qb.C. 807
pic_tW2qbWb.C. 1880
pic_tWlbWlb 1944

root -l -b -q “Roofit_grid_5sigma.C(number)"

void Roofit_grid_5sigma(double mean_start)
{
}


void test(int argc, const char* argv)
{
    cout << argv << endl;
    return 0;
}

root -l "test.C(1,\"come\")"

g++ -o ExampleMacro test.C `root-config --cflags --libs`


ありがとうございます。ほぼ再現できていて、素晴らしいと思います。pT依存性の理由については、なんとなくで良いので考えてみてください。

これでreferenceとなる既存手法の理解はできたと思うので、野辺さんのサンプルを使ってimageを使ったtaggingにトライしてみましょう。
ntupleは /eos/atlas/unpledged/group-tokyo/users/tnobe/dijetDataMC にあります。
本当は年末にlogin.icepp の方に移そうと思っていたのですが、すっかり忘れていました。
途中まで(半分くらい)コピーしたものが login iceppの /home/saito/datafiles/ntuple/QGTagging/dijetDataMC にあるので、適当な1ファイルを使って中身を見てみてください。
野辺さんによると、これはLarge-R jetのサンプルで、pt>450 GeV, |eta|<2 のカットがかかっているみたいです。
float rljet_pt_comb;
float rljet_eta;
float rljet_phi;
float rljet_m_comb;
int rljet_pdgId
vector<float> rljet_assoc_cluster_pt;
vector<float> rljet_assoc_cluster_eta;
vector<float> rljet_assoc_cluster_phi;
vector<float> rljet_assoc_track_pt;
vector<float> rljet_assoc_track_eta;
vector<float> rljet_assoc_track_phi;
が関連する変数です。変数の意味は変数名の通りで、上５つがLarge-R jetの(pt, eta, phi, mass, q/g の pdgId)、その下の6つが、そのLarge-R jetに付随したカロリメータクラスター・トラックの(pt, eta, phi)です。
これまでtrackを使ったtaggingをしていたので大丈夫だと思いますが、1つのジェットには複数の(そして数がジェットによってバラバラの)トラック・カロリメータクラスターが付随しています。数がわからないので、これらがvector としてroot fileに入っています。
まずは、このファイルを使って、カロリメータクラスター・トラックのeta・phi分布(http://cdsweb.cern.ch/record/2275641/files/ATL-PHYS-PUB-2017-017.pdf のFigure 1,2,3みたいなもの)を作ってみてください。


これをCNN等で解析するためには、TMVAではない他のツールを使う必要があります。(TMVAでもできないことはないですが、おそらくとても不便)
色々ややこしいので、これはまた後で考えましょう。。。代表的なDeep Learning toolとしてはtensorflow, pytorchが有名なので、ちょっと調べてみてください。


bsub -q 1d -o output.log EtaInterCalAnalysis

Path: /home/saito/datafiles/ntuple/QGTagging/dijetDataMC


1.user.tnobe.361023.Pythia8EvtGen.DAOD_JETM6.e3668_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416647._000016.output.root::

2.user.tnobe.361024.Pythia8EvtGen.DAOD_JETM6.e3668_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416648._000012.output.root::

3.user.tnobe.361025.Pythia8EvtGen.DAOD_JETM6.e3668_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416649._000019.output.root::

4.user.tnobe.361026.Pythia8EvtGen.DAOD_JETM6.e3569_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416650._000020.output.root::

5.user.tnobe.361027.Pythia8EvtGen.DAOD_JETM6.e3668_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416651._000023.output.root::

6.user.tnobe.361028.Pythia8EvtGen.DAOD_JETM6.e3569_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416652._000017.output.root::

7.user.tnobe.361029.Pythia8EvtGen.DAOD_JETM6.e3569_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416653._000032.output.root

8.user.tnobe.361030.Pythia8EvtGen.DAOD_JETM6.e3569_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416654._000011.output.root::

9.user.tnobe.361031.Pythia8EvtGen.DAOD_JETM6.e3569_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416655._000019.output.root::

10.user.tnobe.361032.Pythia8EvtGen.DAOD_JETM6.e3668_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

::user.tnobe.21416656._000016.output.root::

11.user.tnobe.410284.PhPy8EG.DAOD_JETM6.e6603_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

12.user.tnobe.410285.PhPy8EG.DAOD_JETM6.e6686_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

13.user.tnobe.410286.PhPy8EG.DAOD_JETM6.e6686_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

14.user.tnobe.410287.PhPy8EG.DAOD_JETM6.e6686_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root

15.user.tnobe.410288.PhPy8EG.DAOD_JETM6.e6686_s3126_r9364_p3712.mc16a_dijet_201904281754_output_root


Data

16.user.tnobe.periodA.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

17.user.tnobe.periodB.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

18.user.tnobe.periodC.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

19.user.tnobe.periodD.physics_Main.DAOD_JETM6.grp15_v01_p3713.data_dijet_201904281754_output_root

20.user.tnobe.periodD.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

21.user.tnobe.periodE.physics_Main.DAOD_JETM6.grp15_v01_p3713.data_dijet_201904281754_output_root

22.user.tnobe.periodE.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

23.user.tnobe.periodF.physics_Main.DAOD_JETM6.grp15_v01_p3713.data_dijet_201904281754_output_root

24.user.tnobe.periodF.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

25.user.tnobe.periodG.physics_Main.DAOD_JETM6.grp15_v01_p3713.data_dijet_201904281754_output_root

26.user.tnobe.periodG.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

27.user.tnobe.periodH.physics_Main.DAOD_JETM6.grp15_v01_p3713.data_dijet_201904281754_output_root

28.user.tnobe.periodI.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

29.user.tnobe.periodJ.physics_Main.DAOD_JETM6.grp15_v01_p3713.data_dijet_201904281754_output_root

30.user.tnobe.periodK.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root

31.user.tnobe.periodL.physics_Main.DAOD_JETM6.grp16_v01_p3713.data_dijet_201904281754_output_root



4, 6, 8, 9 

vector<vector<float> >に関して
LinkDef.h
#ifndef __VEC__
#define __VEC__
 
#include <vector>
  
#ifdef __CINT__
#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;
#pragma link C++ class vector<vector<int> >+;
#pragma link C++ class vector<vector<bool> >+;
#pragma link C++ class vector<vector<char> >+;
#pragma link C++ class vector<vector<short> >+;
#pragma link C++ class vector<vector<long> >+;
#pragma link C++ class vector<vector<unsigned char> >+;
#pragma link C++ class vector<vector<unsigned short> >+;
#pragma link C++ class vector<vector<unsigned int> >+;
#pragma link C++ class vector<vector<unsigned long> >+;
#pragma link C++ class vector<vector<float> >+;
#pragma link C++ class vector<vector<double> >+;
#pragma link C++ class vector<vector<char*> >+;
#pragma link C++ class vector<vector<const char*> >+;
#pragma link C++ class vector<vector<Long64_t> >+;
#pragma link C++ class vector<vector<ULong64_t> >+;
#pragma link C++ class vector<vector<void*> >+;
#endif
 
#endif

rootcint -f Dict.cc -c LinkDef.h
後はDict.ccをincludeするか、一緒にコンパイルすればvector<vector<float> >が使えるはず



setupATLAS
lsetup "lcgenv -p LCG_98python3 x86_64-centos7-gcc9-opt root_numpy"

lsetup "lcgenv -p LCG_98python3 x86_64-centos7-gcc9-opt scikitlearn"

lsetup "lcgenv -p LCG_98python3 x86_64-centos7-gcc9-opt"
でパッケージの一覧が確認できます。


cp merge.root /home/chengyu/paper/root_numpy/rootfile/merge1.root


bsub -q 4h -o output.log python try.py
python3 -m v env
$ source env/bin/activate
$ pip install --upgrade pip
$ pip install tensorflow

Later : source env/bin/activate
Logout : deactivate
sklearn



python3 -c 'import tensorflow as tf; print(tf.__version__)’
pip show tensorflow


bsub -q 1d -o log/output.log python try.py
bsub -q 1d -o log/output_CNN.log python CNN_try.py

bsub -q 1d -o log/output_CNN.log python CNN_training.py

df -h .




84/84 - 0s - loss: 0.6408 - accuracy: 0.6529

bsub -q 1d -o log/output11.log python cluster_arr.py -f rootfile/merge11.root merge11

file7_3.log
file7_26
file7_30
file10_17.log
file10_18.log
file10_19.log


python3 -c 'import tensorflow as tf; print(tf.__version__)'


質問。ルーです。お話ありがとうございました。80%の売り上げがデータアナリティクスの業務から来ていると聞きまして、御社の業務発展についてお伺いしたいです。
今後、自社プロダクトを開発する予定がありますか？また他の業務をより発展することは考えられていますでしょうか？


https://forms.office.com/Pages/ResponsePage.aspx?id=eirtX3CBVE-5adQlpYj1BHkTfXgIZb9JoLda2XKThj5UOE5DS0lQVEc4NUNMMUhUV1g1V1hLUDFJTi4u





42/42 - 0s - loss: 0.6191 - accuracy: 0.6700




bsub -q 1d -o log/cluster_log/output1.log root -l “cluster_phi_eta.C(\"/home/chengyu/paper/root_numpy/rootfile/merge11.root\",11)"




bsub -q 1d -o log/track_log/output11.log python track_arr.py -f rootfile/merge11.root merge11


consisted of three iterations of a convolutional layer with a ReLU activation and a maxpooling layer


—-regularization—-
https://medium.com/intelligentmachines/convolutional-neural-network-and-regularization-techniques-with-tensorflow-and-keras-5a09e6e65dc7




bsub -q 1d -o log/CNN_2D_paper_arch.log python CNN_2D_paper_arch.py

224000 jet images, while 56000 jet images are used for testing 

bsub -q 1d -o log/track_log/output1.log python track_arr.py -f rootfile/merge1.root merge1




bsub -q 1d -o log/try.log python CNN_2D_paper_arch.py


Training Sample 
file2_1_distri.npy 
file2_1_label.npy 



Testing sampel
file2_5



Merge1 : 19524




File2_1

if i==42381 or i==43190 or i==47472 or i==71695 or i==78708 or i==88420 or i==89721 or i==93069 or i==104737 or i==106167 or i==132987 or i==138789 or i==162684: continue

ievt!=42381 && ievt!=43190 && ievt!=47472 && ievt!=71695 && ievt!=78708 && ievt!=88420 && ievt!=89721 && ievt!=93069 && ievt!=104737 && ievt!=106167 && ievt!=132987 && ievt!=138789 && ievt!=162684






File2_5

(ievt!=9494 && ievt!=10354 && ievt!=30222)
if i==9494 or i==10354 or i==30222: continue



Neural network model

1.Multilayer Perceptron (MLP):   An MLP consists of three main layers of nodes — an input layer, a hidden layer, and an output layer. In the hidden and the output layer, every node is considered as a neuron that uses a nonlinear activation function


2.Convolution Neural Network(CNN)
  Others: Mask RCNNS form primary usage, In addition GANs have provided new capabilities. LSTMs form the major RNNs
















3.Recurrent Neural Networks(RNN):  the output from the previous step is fed back as input to the current step. The hidden layer in the RNN enables this feedback system. This hidden state can store some information about the previous steps in a sequence. The ‘memory’ in RNN helps the model in remembering all the information that has been calculated. It, in turn, uses these same parameters for each of the inputs to produce the output, thereby reducing the complexity of parameters.



4.Deep Belief Network(DBN) (unsupervised learning):   use probabilities and unsupervised learning to generate the output. DBNs consist of binary latent variables, undirected layers, and directed layers.  This composition enables quick layer-by-layer unsupervised training procedure where contrastive divergence is applied to each sub-network, starting with the lowest visible layer. DBNs find major applications in image recognition, video recognition, and motion capture data.


5.Restricted Boltzmann Machine (RBM):   RBMs are shallow, two-layer neural networks that constitute the building blocks of deep-belief networks. It consists of a neuron-like unit called node; the nodes are connected to each other across layers but not within the same layer. RBMs are generally used in building applications such as dimensionality reduction, recommender systems, and topic modelling. However, in recent years generative adversarial networks are slowly replacing RBMs
RBM doesn’t follow the same direction like above (say input->hidden layer->output). It connect all each other




















6. Autoencoder
input and output are identical.Autoencoders are used for purposes such as pharmaceutical discovery, popularity prediction, and image processing.

















7.Long Short Term Memory Networks (LSTMs): a kind of RNN, LSTMs retain information over time. They are useful in time-series prediction because they remember previous inputs


















8.Generative Adversarial Networks (GANs): GANs are generative deep learning algorithms that create new data instances that resemble the training data. GANs have two components: a generator, which learns to generate fake data, and a discriminator, which learns from that false information.


9. Radial Basis Function Networks (RBFNs): RBFNs are special types of feedforward neural networks that use radial basis functions as activation functions. They have an input layer, a hidden layer, and an output layer and are mostly used for classification, regression, and time-series prediction.


10.Self Organizing Maps (SOMs) :  Professor Teuvo Kohonen invented SOMs, which enable data visualization to reduce the dimensions of data through self-organizing artificial neural networks. 



11.Deep Belief Networks (DBNs) :DBNs are generative models that consist of multiple layers of stochastic, latent variables. The latent variables have binary values and are often called hidden units.  DBNs are a stack of Boltzmann Machines with connections between the layers, and each RBM layer communicates with both the previous and subsequent layers. DBNs are used for image-recognition, video-recognition, and motion-capture data.   
12.Artificail Neural Networks(ANN)


Supervised Models
	Classic Neural Networks (Multilayer Perceptrons)
	Convolutional Neural Networks (CNNs)
	Recurrent Neural Networks (RNNs)
Unsupervised Models
	Self-Organizing Maps (SOMs)
	Boltzmann Machines
	AutoEncoders



Next :

Cut pT
See track eta vs phi.
Try other deep learning tool



if jet_pt[i][0][0]/1000 < 650 or jet_pt[i][0][0]/1000 > 850: continue


if jet_pt[i][0][0]/1000 < 850 or jet_pt[i][0][0]/1000 > 1050: continue
















Small-R jetのntupleを作りました。
login.icepp.jp : /home/saito/datafiles/ntuple/QGTagging/test.20210421
まず少ないサンプル数で作ったので、ntupleに問題がないか確認してみてください。問題がなさそうなら、gridを使って、もっと多くのntupleを作ります。
ntupleの変数は野辺さんのものと同じ様にしています。
	rljet_*: Large-R jet (R=1.0) の 変数
	rsjet_*: small-R jet (R=0.4) の 変数

quark/gluonのlabelは
	small-R jetに対しては rsjet_parton_truth_label_id (jet の PartonTruthLabelID を見ています。)
	Large-R jetに対しては PartonTruthLabelID が入っていなかったので、苦肉の策として、Large-R の近くにいるsmall-R jetのPartonTruthLabelID を見るようにしています。その値が rljet_matched_rsjet_truth_label_id に入っています。

本当はcalorimeter cellごとの情報があると良かったのですが、それはDAODに残されていなかったので、代わりに、
	rljet_e_PreSampleB
	rljet_e_EMB1
	...
にみたいな変数を定義しました。これはカロリメータの各レイヤーでのエネルギーです。(https://twiki.cern.ch/twiki/bin/view/AtlasProtected/Run2JetMoments#Sampling_layers も参照してください。) この値はおそらくcalibrateされていない値で、足してもjetのtotal energyにはなりませんが、比は使えると思うので、もし良かったら機械学習で使ってみてください。

towerの値は、DAODやAODには残されていないので、抽出は無理でした。。。topo clusterでのstudyをすすめることにしましょう。






This section describes the ATLAS hadronic calorimeters: the tile calorimeter, the liquid-argon
hadronic end-cap calorimeter (HEC) and the liquid-argon forward calorimeter (FCal)




Layer 

0.rsjet_e_PreSampleB
1.rsjet_e_EMB1
2.rsjet_e_EMB2
3.rsjet_e_EMB3
4.rsjet_e_PreSampleE
5.rsjet_e_EME1
6.rsjet_e_EME2
7.rsjet_e_EME3
8.rsjet_e_HEC0
9.rsjet_e_HEC1
10.rsjet_e_HEC2
11.rsjet_e_HEC3
12.rsjet_e_TileBar0
13.rsjet_e_TileBar1
14.rsjet_e_TileBar2
15.rsjet_e_TileGap1
16.rsjet_e_TileGap2
17.rsjet_e_TileGap3
18.rsjet_e_TileExt0
19.rsjet_e_TileExt1
20.rsjet_e_TileExt2
21.rsjet_e_TileFCAL0
22.rsjet_e_TileFCAL1
23.rsjet_e_TileFCAL2
24.rsjet_e_MINIFCAL0
25.rsjet_e_MINIFCAL1
26.rsjet_e_MINIFCAL2

CNN for track + MLP for jet 




bsub -q 1d -o log/output.log python RNN_training.py

bsub -q 1d -o log/RNN_training_smaller_double.log python RNN_training.py


VGG16.  Image classification

WW scatteringの解析がどのようなものかも勉強してみてください。
https://arxiv.org/abs/1906.03203


bsub -q 1d -o try_output.log python RNN_training.py


Pt -> 図の形は変わる？


Try:
CNN:  conv(128,5,5)+conv(128,5,5)+conv(64,3,3) + pooling(2,2) = 0.6813

CNN: conv(128,5,5) + pooling(2,2) + conv(64,3,3) = 0.6849

CNN: conv(128,5,5) + conv(64,3,3) + conv(64,3,3) + conv(64,3,3) + conv(64,3,3) = 0.6614

RNN 0.5393

50times CNN:  conv(128,5,5)+conv(128,5,5)+conv(64,3,3) + pooling(2,2) = 0.7397



bsub -q 4h -o log/DNN_3layer_in_de.log python DNN_training.py


bsub -q 4h -o log/try.log python try.py


案外早くサンプル作成できました。
login.icepp.jp : /home/saito/datafiles/ntuple/QGTagging/dijet-20210413

refactoringついでにちょっとだけ動作を変えたので、bugが入っていたらすみません。(Large-R jetにassociateしたsmall-R jetの判定を、前は最もdelta Rが小さいものを選んでいましたが、今は、delta R<0.75のsmall-R jetでpTが最も高いものを選ぶようにしました。)

Ntupleの作成コードもgitに上げました。
https://gitlab.cern.ch/masaito/QGTaggingNtupleMaker
野辺さんのコード(https://gitlab.cern.ch/tnobe/DataMCDijetTopology) を流用しています。



GPU https://www.icepp.jp/howtouse_gpu.html
ssh lxgpu01.icepp.jp -Y
CUDA:
export LD_LIBRARY_PATH=/home/saito/tool/cuda/toolkit/cuda-11.2/lib64/:/home/saito/tool/cuda/toolkit/cuda-11.2/extras/CUPTI/lib64/:/home/saito/tool/cuDNN/cuda/lib64/:$LD_LIBRARY_PATH
export INCLUDE_PATH=/home/saito/tool/cuda/toolkit/cuda-11.2/bin/:/home/saito/tool/cuDNN/cuda/include/:$INCLUDE_PATH
export PATH=/home/saito/tool/cuda/toolkit/cuda-11.2/bin/:$PATH

export CUDA_PATH=/home/saito/tool/cuda/toolkit/cuda-11.2
export CUDNN_PATH=/home/saito/tool/cuDNN/cuda-11.0-8.0.4
export LD_LIBRARY_PATH=$CUDA_PATH/lib64/:/home/saito/tool/cuda/toolkit/cuda-11.2/extras/CUPTI/lib64/:$CUDNN_PATH/lib64/:$LD_LIBRARY_PATH
export INCLUDE_PATH=$CUDA_PATH/bin/:$CUDNN_PATH/include/:$INCLUDE_PATH
export PATH=$CUDA_PATH/bin/:$PATH

Check GPU status:
nvidia-smi


Use screen with section : screen -S 1
Ctrl + a -> + d : temporary leaving
Exit -> close screen
screen -ls : see all screen
screen -r [screen_name] : connect to specific screen
-U : use UTF-8 mode


early stopping:: search it





2_1 : 151619


No: 33741
2_5 : 30414













login icepp : /home/saito/datafiles/ntuple/QGTagging/dijet-20210506
ちなみに、値が定義できないとき(truth matchingできないとか)はdummy valueを入れるようにしています。明らかにdummyだと判別できるようにしたつもりですが、値自体は
https://gitlab.cern.ch/masaito/QGTaggingNtupleMaker/-/blob/master/Root/QGTaggingNtupleMakerEventSaver_LRJet.cxx
https://gitlab.cern.ch/masaito/QGTaggingNtupleMaker/-/blob/master/Root/QGTaggingNtupleMakerEventSaver_SRJet.cxx
にあるので必要なら確認してください。


/home/saito/datafiles/ntuple/QGTagging/dijet-20210413

/home/saito/datafiles/ntuple/QGTagging/dijet-20210506/user.masaito.364702.Pythia8EvtGen.DAOD_JETM6.e7142_s3126_r10201_p4308.20210506-01_output_root/user.masaito.25487842._000001.output.root




Higgs場のmechanismから見るとhiggs場が素粒子が











/home/saito/datafiles/ntuple/QGTagging/dijet-20210506/user.masaito.364703.Pythia8EvtGen.DAOD_JETM6.e7142_s3126_r10201_p4308.20210506-01_output_root/user.masaito.25487843._000002.output.root


講演題目（申込時に用いるものと同じもの）：
（日本語）LHC-ATLAS実験におけるニューラルネットワークを用いたクォーク・グルーオンジェット識別
（英語) Quark/Gluon jet tagging using neural network tagger with the ATLAS detector at the LHC

氏名：LU Cheng Yu

学年：修士二年

共著者（申込時に用いるものと同じもの。自分の名前の書き忘れに注意。）：浅井祥仁、齊藤真彥、野辺拓也

アブストラクト（申込時に用いるものと同じもの）： As we reach TeV scale energy at the LHC, vector-boson fusion(VBF) and vector-boson scattering(VBS) channels are significant for higgs study. In these channels, we have quarks and gluons which both of them are detected as jets. Our goal is distinguishing quark-initiated from gluon-initiated jets which is useful for many measurements and researches at the LHC. This study is using simulated dijet events in  pp collision with the ATLAS detector. Across a wide range of q/g tagging identification, neural network tagger achieve an impressive efficiency compared to traditional machine learning tagger such as Boosted Decision Tree(BDT).

追加情報 (以下の4項目に関して、あれば必ず記入してください）:

(2) 研究進行状況 (アブストには書けない実状等)
　CNN, DNN, CNN+DNNのモデルを作ってLargeR jetとSmallR jetのデータで学習させました。これらのneural networkのq/g tagger accuracyは約80%です
(3) 実データを用いない予定であれば，その旨 (用いる可能性がある場合には、現時点では用いる、としてください)
dijetのMC データを用いてq/g taggingの効率を見積りしています。



sjet_file4_2
('n_quark', 289167)
('n_gluon', 886947)

sjet_file3_4
('n_quark', 97442)
('n_gluon', 370151)



ljet_file4_2
n_quark : 253578
n_gluon : 582319

ljet_file3_2
 ('n_quark', 134055)
 ('n_gluon', 351908)






東京大学のルーチェンゆうと申します。
日立産業制御ソリューションズご採用担当の舘野様ですか？
いつもお世話になっております。
先日いただいた内定通知の件でご連絡させていただいたのですが、今お時間よろしいでしょうか？
この度は、自分の間違いでお迷惑をかけまして本当に申し訳ございません。
他社と御社をどちらを選ぶかとても悩みましたが、検討させていただいた結果、今回の内定を辞退させていただきたくご連絡いたしました。






LHCb最新結果









//CNN
python track_arr.py -f /home/chengyu/paper/front_jet/root_numpy/rootfile/testfile/testfile_le21_flat_50k.root testfile_le21_flat_small_50k >&log/s_track_log/testfile_le21_flat_small_50k.log

python cluster_arr.py -f /home/chengyu/paper/front_jet/root_numpy/rootfile/testfile/testfile_le21_flat_50k.root testfile_le21_flat_small_50k >&log/s_cluster_log/testfile_le21_flat_small_50k.log


//conv1d
python conv1d_arr.py -f /home/chengyu/paper/front_jet/root_numpy/rootfile/trainfile/trainfile_le21_flat.root trainfile_le21_flat.root >&log/rainfile_le21_flat.log


python conv1d_cluster.py -f /home/chengyu/paper/front_jet/root_numpy/rootfile/trainfile/trainfile_gt21_flat_less.root trainfile_gt21_flat_less >&cluster/log/trainfile_le21_flat_less.log

python conv1d_track.py -f /home/chengyu/paper/front_jet/root_numpy/rootfile/trainfile/trainfile_gt21_flat_less.root trainfile_gt21_flat_less >&track/log/trainfile_gt21_flat_less.log


H7EG
python conv1d_cluster.py -f /home/chengyu/paper/H7EG/root_numpy/rootfile/trainfile/trainfile_le21_gt100_le200_more.root trainfile_le21_gt100_le200_more >&cluster/log/trainfile_le21_gt100_le200_more.log

python conv1d_track.py -f /home/chengyu/paper/H7EG/root_numpy/rootfile/trainfile/trainfile_le21_gt100_le200_more.root trainfile_le21_gt100_le200_more >&track/log/trainfile_le21_gt100_le200_more.log





testfile_gt21_le45_distri.npy
testfile_le21_150_250_distri.npy
testfile_le21_500_600_distri.npy
testfile_le21_distri.npy






DNN
totoal g :  278555
gluon :  14579


('totoal q : ', 267837)
('quark : ', 262722)



cross*genfilteff*kFactor [nb]


rljet 4505

rsjet event : 106754
 rsjet_alljet : 284004

int filepath, int nfile





le21file :
Quark:108854900
Gluon:216478900



98





kill -9 `jobs -ps`






bsub -q 1d -o log31/DNN_flat_31_weight_128_nor.log python DNN_training.py






おはようございます。
すみません、健康保険についてをお伺いしたいですが、
学生ですので所得申告をしていませんでした。それで保険料７０パーセントの減免がなくなりましたが、それについては何かできますでしょうか？



cluster_qg_tree->Scan("rsjet_pt_comb")

conv1d_all_le21_flat_rate1_all_new.h5
conv1d_DNN_le21_flat_rate1_all_energyflow_new.h5

le21_0_100 ok over
Quark:10546300
Gluon:85293900
10293764

le21_100_200 ok over
Quark:10253100
Gluon:42906000
10493579

le21_200_300 ok over
Quark:8606200
Gluon:22582600
8823530

le21_300_400 ok over
Quark:7231000
Gluon:14594900
14536823

le21_400_500 ok over
Quark:8459400
Gluon:12560400
8421472

le21_500_600 ok over
Quark:6361615
Gluon:7951386
14313001

le21_600_700  ok over
Quark:4860900
Gluon:5361100
10229954


le21_700_800  ok over
Quark:4281700
Gluon:4238600
8528577

le21_800_900 ok over
Quark:4415900
Gluon:3755500
8179125

le21_900_1000 ok over
Quark:3565700
Gluon:2712500
6284347


le21_1000_1500 ok over
Quark:13422400
Gluon:8079500
8515893

le21_1500_2000 ok over
Quark:8282500
Gluon:3288800
7432365

le21_2000_3000 ok over
Quark:10235600
Gluon:2396500
4956878

le21_3000_4000 ok over
Quark:5155800
Gluon:576400
1092853

le21_4000_5000 ok over
Quark:1809600
Gluon:99162
191715

Gt200
Quark:88036680
Gluon:88259510

le200
Quark:88036680
Gluon:88259510


le05 ok over
Quark:42032720
Gluon:77695600
10803880

gt05_le10 ok over
Quark:29637660
Gluon:62180380
10121475

gt10_le15 ok over
Quark:20874750
Gluon:44510730
10782841


gt15_le21 ok 
Quark:16299380
Gluon:32081610
10780508

le21_le1000
Quark:68624794
Gluon:201996694

le21_gt1000
Quark:40219000
Gluon:14469300
24527057


DNN:/home/chengyu/paper/front_jet/ROC/testarray/DNN/output/DNN_le21_sjet_prob_flat_50M.npy

CNN:/home/chengyu/paper/front_jet/ROC/testarray/DNN_CNN/prob_arr/merge_output/CNN_2D_prob_sjet_le21_flat_50M_20times.npy

DNN_CNN:/home/chengyu/paper/front_jet/ROC/testarray/DNN_CNN/prob_arr/merge_output/CNN_2D_prob_sjet_le21_flat_50M_40times.npy








cluster_qg_tree->Scan("rsjet_pt_comb")





aQGC anomalous quartic gauge couplings




testfile_le21_flat_50M_



rsjet_pdgid

rsjet_parton_truth_label_id







"ATLAS Simulation Preliminary" というのは、ATLASグループでapproveを受けたplotにつけるものなので、自分で作った(ATLASの承認を受けていないもの)については"ATLAS Simulation Internal"、もしくは学会用なら"ATLAS Simulation Work in progress"としておいてください。


Le5000
Quark:126157000
Gluon:245935900

le_21_Le5000
Quark:107539700
Gluon:216538500

Le3000
Quark:11919580
Gluon:24527320


le21_le500
Quark:45125210
Gluon:177967200

le_21_gt500_le1000
Quark:23501520
Gluon:24032640

le21_gt1000_le1500
Quark:13424480
Gluon:8081820

le21_gt1500_le2000
Quark:8283870
Gluon:3290160

le21_gt2000_le2500
Quark:4617460
Gluon:1348110

le21_gt2500_le3000
Quark:5619660
Gluon:1049240

le2_le4000
Quark:5156310
Gluon:577130

le21_gt4000_le5000
Quark:1810010
Gluon:91140




Allfile
Quark:108848300. 7256534 
Gluon:216472000. 6982925
9766687


le100:3455272
conv1d_all_le21_le100_rate1_all_new2.h5
gt100_le200:2066934
conv1d_all_le21_gt100_le200_rate1_all.h5
gt200:8717253
conv1d_all_le21_gt200_rate1_all.h5
continue;







conv1d_arr = np.zeros((ievent*210*3), dtype=float).reshape(ievent,210,3)

cluster_max = 64
track_max = 139


scalar_fname = ‘/home/chengyu/paper/front_jet/ROC/testarray/DNN/array_cut/output/'


with open(scalar_fname + filename + '_scalar.npy', 'rb') as scalar_f:
    scalar_sample = np.load(scalar_f)




bsub -q 4h -o cluster_log/file108.log python conv1d_cluster.py -f /home/chengyu/paper/front_jet/ROC/testarray/CNN/rootfile/output/testfile_le21_gt1000_le3000_20M_108.root testfile_le21_gt1000_le3000_20M_108


bsub -q 1d -o log/file108.log python prob_est_separate.py -f testfile_le21_gt1000_le3000_20M_108 DNN_CNN_2D_prob_gt1000_le3000_20M_pTbin_108







Bkg : 538678
Sig : 279560

DER_mass_transverse_met_lep maru
DER_pt_h xx 
DER_deltar_tau_lep
DER_sum_pt
DER_pt_ratio_lep_tau maru

pri_lep_pt xx


ssh ppccuser041@54.150.162.69 -Y


AMS (test) = 3.1063844460572536
           = 3.1446852050660015
           = 3.175060118090176(best 6 for likelihood)
	         = 3.290315699912369(best 6 for BDT)

           = 3.3458511058518328


PRI_tau_eta
PRI_lep_pt
PRI_lep_eta
PRI_met_sumet (not good)
DER_deltar_tau_lep
DER_met_phi_centrality
DER_mass_vis




1. DER_mass_transverse_met_lep
2. DER_pt_ratio_lep_tau   (lep pT & tau pT)
3. PRI_lep_eta (tau_eta)
4. PRI_met (PRI_met_sumet, DER_deltar_tau_lep, DER_met_phi_centrality)
5. DER_mass_vis
6. PRI_tau_pt





callback = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=15)


history = model.fit(train_sample, train_label, epochs=100, validation_data=(test_sample, test_label, test_weight_arr), sample_weight=weight_arr, callbacks=[callback])










Layer ごとに energy を測定できる


le21_le2000:
Quark:90347970
Gluon:213376500
20199411

gt21_flat
Quark:18391670
Gluon:29391770
12009091

gt21_le100
quark:8455630
gluon:22242150

Gluon at 80% quark
0.569645
0.5027866

Herwig

le21_le100 ok
Quark:5014680
Gluon:53884660

le21_gt100_le200 ok
Quark:5611270
Gluon:26799180

le21_gt200_le300 ok
Quark:4916290
Gluon:13896440

le21_gt300_le400 ok
Quark:4717140
Gluon:9300690

le21_gt400_le500 ok
Quark:6253740
Gluon:8225170

le21_gt500_le600 ok
Quark:4881130
Gluon:5374130

le21_gt600_le700 ok
Quark:4005100
Gluon:3908750

le21_gt700_le800 ok
Quark:4315550
Gluon:3649610

le21_gt800_le900 ok
Quark:5642060
Gluon:3899880


le21_gt900_le1000 ok
Quark:4555750
Gluon:2798280

le21_gt1000_le1500
Quark:12125940
Gluon:60432370

le21_gt1500_le2000
Quark:4655440
Gluon:1591750





VBS

backgroundのntupleは、
/gpfs/fs7001/saito/datafiles/ntuple/QGTagging/Wlnu-20210914
にあります。364170-364183 がWenuで、364156-364169 がWmunuです。 Wtaunuは作っていません (必要なら作ります。)


signal のntupleは現在作成中です。
/gpfs/fs7001/saito/datafiles/ntuple/QGTagging/VBS-20210914
に置く予定です。(来週頭にはできているはず。)



0.17

0.4

0.2


We have found Higgs boson at the Large Hadron Collider(LHC) in 2021 and many 
measurements are done for understanding its properies. There are lots of important 
decay processes for Higgs boson and one of them is called Vector Boson Scattering(VBS).
vector boson scattering process takes a essential role as studying the Higgs mechanism and new physics beyond the 
standard model may change the couplings in vector boson scatteringprocess. The properties above 
shows the potential of studying vector boson scattering process.
\\
In vector boson scattering process, we have two quarks and two vector bosons 
in the final state and vector boson can also decays into two quarks. 
We have lots of gluon as background because of quantum chromodynamics(QCD) effect 
as well and since quark and gluon are both seen as a jet in the dector, 
it is important to distinguish quark and gluon with Q/G Tagger.
\\
Machine Learning has been used for decades for Q/G Tagger such as Boosted 
Desicion Tree(BDT). However, Deep Learning and neural network has been developed 
in appropriately last ten years. We have studied different kinds of neural 
network model for Q/G Tagging comparing to the conventinal Boosted Desicion Tree 
method in this thesis. Receiver Operating Characteristic(ROC) Curve indicates 
that the performance of neural network models are significantly better than Boosted Desicion Tree 
model with around 41\% improvement.
\\
In VBS process, the final state includes two quarks and two vector boson.
Select the Sample to try if it satisfies IRC safety (Energyflow)
See each jet probability with energy flow or deep sets model(Huge difference)

alias ssh_GPU='ssh lxgpu01.icepp.jp -Y'








bsub -q 1d -o gt15_le21.log root -l training.C

conv1d_flat_q_prob_cut=0.682, efficiency : 0.800126
conv1d_flat_g_prob_cut=0.682, rejection : 0.752922

BDT : 0.6846754


DNN_CNN
quark_eff(le100) 0.800415992413148
gluon_rej(le100) 0.34098956556648696

quark_eff(gt100_le200) 0.800000049684105
gluon_rej(gt100_le200) 0.6012606651707957

quark_eff(gt200_le300) 0.8000003023474744
gluon_rej(gt200_le300) 0.6629036172239029

quark_eff(gt300_le400) 0.8000001036958839
gluon_rej(gt300_le400) 0.6748141027353093

quark_eff(gt400_le500) 0.8000000306802416
gluon_rej(gt400_le500) 0.6838965229690082

quark_eff(gt500_le600) 0.8000001832354696
gluon_rej(gt500_le600) 0.6905958147569109

quark_eff(gt600_le700) 0.8000000518940864
gluon_rej(gt600_le700) 0.6901504664425031

quark_eff(gt700_le800) 0.8000002324196772
gluon_rej(gt700_le800) 0.6917855288855659

quark_eff(gt800_le900) 0.8000001983691344
gluon_rej(gt800_le900) 0.6917319239388275

quark_eff(gt900_le1000) 0.8000002268369659
gluon_rej(gt900_le1000) 0.6917434528878792

quark_eff(gt1000_le1500) 0.8000001978648531
gluon_rej(gt1000_le1500) 0.6896414807219708

quark_eff(gt1500_le2000) 0.8000001477529751
gluon_rej(gt1500_le2000) 0.6923673278642547

quark_eff(gt2000_le3000) 0.8000000996950508
gluon_rej(gt2000_le3000) 0.6867792430468902

quark_eff(gt3000_le4000) 0.8000013325829767
gluon_rej(gt3000_le4000) 0.6905840513294829

quark_eff(gt4000_le5000) 0.8000765313611946
gluon_rej(gt4000_le5000) 0.7453666101152863


Deepset 
quark_eff(le100) 0.80017640018947
gluon_rej(le100) 0.3061192381725233
treshold(le100) 0.5538381934165955

quark_eff(gt100_le200) 0.800002516850247
gluon_rej(gt100_le200) 0.5787162930893437
treshold(gt100_le200) 0.6717121005058289

quark_eff(gt200_le300) 0.8000001366358773
gluon_rej(gt200_le300) 0.6634954707764622
treshold(gt200_le300) 0.6837458610534668

quark_eff(gt300_le400) 0.800000021143019
gluon_rej(gt300_le400) 0.6774926096640805
treshold(gt300_le400) 0.6433825492858887

quark_eff(gt400_le500) 0.8000000909192823
gluon_rej(gt400_le500) 0.6896688996303605
treshold(gt400_le500) 0.6215711832046509

quark_eff(gt500_le600) 0.8000000801996215
gluon_rej(gt500_le600) 0.6993685663388205
treshold(gt500_le600) 0.6085483431816101

quark_eff(gt600_le700) 0.8000000161576593
gluon_rej(gt600_le700) 0.7019249916372041
treshold(gt600_le700) 0.5934332609176636

quark_eff(gt700_le800) 0.8000000007184509
gluon_rej(gt700_le800) 0.7049338685960977
treshold(gt700_le800) 0.5826555490493774

quark_eff(gt800_le900) 0.8000000938783014
gluon_rej(gt800_le900) 0.7076222674526673
treshold(gt800_le900) 0.5758717656135559

quark_eff(gt900_le1000) 0.8000002263477126
gluon_rej(gt900_le1000) 0.7090621068911709
treshold(gt900_le1000) 0.5730730295181274

quark_eff(gt1000_le1500) 0.8000002206416347
gluon_rej(gt1000_le1500) 0.7129104357146416
treshold(gt1000_le1500) 0.5700175762176514

quark_eff(gt1500_le2000) 0.8000000780763579
gluon_rej(gt1500_le2000) 0.7212562579634456
treshold(gt1500_le2000) 0.6007469892501831

quark_eff(gt2000_le3000) 0.8000001779006587
gluon_rej(gt2000_le3000) 0.7186052197549815
treshold(gt2000_le3000) 0.60183185338974

quark_eff(gt3000_le4000) 0.8000020304335557
gluon_rej(gt3000_le4000) 0.731546789291385
treshold(gt3000_le4000) 0.6608454585075378

quark_eff(gt4000_le5000) 0.800043613717853
gluon_rej(gt4000_le5000) 0.7814369358615184
treshold(gt4000_le5000) 0.7367991209030151




Energy Flow
quark_eff(le100) 0.8034661781165021
gluon_rej(le100) 0.3126777257744239
treshold(le100) 0.5274216532707214

quark_eff(gt100_le200) 0.800000831359951
gluon_rej(gt100_le200) 0.5652941348006472
treshold(gt100_le200) 0.5580970048904419

quark_eff(gt200_le300) 0.8000001430791568
gluon_rej(gt200_le300) 0.6561870465157629
treshold(gt200_le300) 0.5602225065231323

quark_eff(gt300_le400) 0.800000145620711
gluon_rej(gt300_le400) 0.6711968935329229
treshold(gt300_le400) 0.529134213924408

quark_eff(gt400_le500) 0.8000001782264344
gluon_rej(gt400_le500) 0.683210275907816
treshold(gt400_le500) 0.5142122507095337

quark_eff(gt500_le600) 0.8000001892039033
gluon_rej(gt500_le600) 0.6923572467586168
treshold(gt500_le600) 0.5051352977752686

quark_eff(gt600_le700) 0.8000002877565485
gluon_rej(gt600_le700) 0.6951064077825255
treshold(gt600_le700) 0.4944624602794647

quark_eff(gt700_le800) 0.8000001856492857
gluon_rej(gt700_le800) 0.698832849786343
treshold(gt700_le800) 0.4865291118621826

quark_eff(gt800_le900) 0.8000000738421963
gluon_rej(gt800_le900) 0.7017860705833607
treshold(gt800_le900) 0.48070889711380005

quark_eff(gt900_le1000) 0.8000002915163564
gluon_rej(gt900_le1000) 0.7037772468866472
treshold(gt900_le1000) 0.4776846170425415

quark_eff(gt1000_le1500) 0.8000002449822318
gluon_rej(gt1000_le1500) 0.708586754273965
treshold(gt1000_le1500) 0.47032561898231506

quark_eff(gt1500_le2000) 0.8000004668189831
gluon_rej(gt1500_le2000) 0.7181069980161298
treshold(gt1500_le2000) 0.48210203647613525

quark_eff(gt2000_le3000) 0.8000001335180684
gluon_rej(gt2000_le3000) 0.7155566156479803
treshold(gt2000_le3000) 0.46948909759521484

quark_eff(gt3000_le4000) 0.800002129811361
gluon_rej(gt3000_le4000) 0.7255054136119568
treshold(gt3000_le4000) 0.4981996417045593

quark_eff(gt4000_le5000) 0.8003788672080179
gluon_rej(gt4000_le5000) 0.7791239317476077
treshold(gt4000_le5000) 0.5578864812850952

8855



conv1d_le100_trainbyflat
-----conv1d_le100 Case-----
quark_eff(le100) 0.9420622009360478
gluon_rej(le100) 0.1240412132726928
treshold(le100) 0.6819999814033508
和flat ROC cut一樣

-----conv1d_le100 Case-----
quark_eff(le100) 0.7000189949933634
gluon_rej(le100) 0.4499588219219065
treshold(le100) 0.6466471552848816




conv1d_le100_Trainbyle200
-----conv1d_le100 Case-----
quark_eff(le100) 0.8000369658614759
gluon_rej(le100) 0.36160438139764095
treshold(le100) 0.769363284111023


-----conv1d_le100 Case-----
quark_eff(le100) 0.7000000266999669
gluon_rej(le100) 0.48451711514534945
treshold(le100) 0.79234379529953

conv1d_le100_Trainbyle100

data revised
-----conv1d_le100 Case-----
quark_eff(le100) 0.801372721084742
gluon_rej(le100) 0.3680105318688457
treshold(le100) 0.5419987440109253

data
-----conv1d_le100 Case-----
quark_eff(le100) 0.7991621351146223
gluon_rej(le100) 0.37119640737769544
treshold(le100) 0.8722540140151978

conv1d_flat_byHerwig_testonpythia
-----conv1d_le100 Case-----
quark_eff(le100) 0.801372721084742
gluon_rej(le100) 0.3680105318688457
treshold(le100) 0.5419987440109253


conv1d_flat_byHerwigle100_testonpythia
-----conv1d_le100 Case-----
quark_eff(le100) 0.7990528183772576
gluon_rej(le100) 0.3865160972537526
treshold(le100) 0.8551174402236938

-----conv1d_le100 Case-----
quark_eff(le100) 0.699492332015906
gluon_rej(le100) 0.5430385100334723
treshold(le100) 0.8782377243041992


conv1d_flat_energyflow_byHerwig_testonpythia
-----conv1d_le100 Case-----
quark_eff(le100) 0.7990008111408192
gluon_rej(le100) 0.36936112371990926
treshold(le100) 0.582029402256012

-----conv1d_le100 Case-----
quark_eff(le100) 0.6999307308917381
gluon_rej(le100) 0.5376192433822053
treshold(le100) 0.6281214952468872



BDT 0.378


track y0.07.  0~60

trackwidth y0.3 x 0~0.4

trackC1 y 0.08 0~0.5

20199411

testfile_le21_le2000_20M.root


Herwig:21839229

also train front jet

cut Large-R jet and Small-R jet

require 1 large-R jet and at least four Small-R jet

ljet_pt_comb





20030143

ok conv1d_DNN_le21_flat_rate1_all_energyflow_new.h5
ok conv1d_DNN_le21_le100_rate1_all_energyflow_new.h5

ok conv1d_all_le21_flat_rate1_new.h5
ok conv1d_all_le21_le100_rate1_new.h5

H7EG
ok conv1d_DNN_le21_flat_rate1_all_energyflow_new.h5
conv1d_DNN_le21_le100_rate1_all_energyflow_new.h5

ok conv1d_all_le21_flat_rate1_all_new.h5
ok conv1d_all_le21_le100_rate1_all_new.h5










-----Evaluation------
le100_byflat : 0.367343
le100_byflat_herwig : 0.372567
le100_byflat_energyflow : 0.343369
le100_byflat_energyflow_Herwig : 0.365541
le100_byle100 : 0.392692
le100_byle100_Herwig : 0.388667
le100_byle100_energyflow : 0.390655
le100_byle100_energyflow_Herwig : 0.398116
BDT_le100_byflat : 0.3821345
BDT_le100_byle100 : 0.4104144



0.665885


20987278



Reconstructed from signal jets + additional jet yielding mass closest to mt


conv1d_DNN_le21_gt100_le200_less_rate1_all_energyflow_new.h5


sjet_pdgid

/gpfs/fs7001/saito/datafiles/ntuple/QGTagging/VBS-20210914/user.masaito.364850.MGPy8EvtGen.DAOD_JETM6.e7827_s3126_r10201_p4308_EXT0.20210914-01_output_root/






< 1000 yattemiru

gt21_le100 yattemiru

19903873

Pythia
le21_le1000
Quark:68627090
Gluon:202000200

Herwig
le21_le1000
Quark:49918310
Gluon:131742100

20117723

model = tf.keras.models.load_model('/home/chengyu/paper/front_jet/conv1d_DNN/pTbin/model/conv1d_DNN_le21_flat_rate1_all_energyflow_new.h5')


新しいサンプルできました。
/home/saito/datafiles/ntuple/QGTagging/VBS-20211020


VBS
440171

TTbar
2749227

lep
6554967
 





conv1d_all_le21_flat_rate1_all_new.h5

VBS
653143

ttbar
6441576

lep
10984868



neural old
ttbar : 151874

lep:592160

586679


if(prob_vec.at(neural_jet_1st_tem) <= 0.5 || prob_vec.at(neural_jet_2nd_tem)<= 0.5 || prob_vec.at(neural_jet_3rd_tem)<= 0.5 || prob_vec.at(neural_jet_4th_tem) <= 0.5){
      cout << "-----prob < 0.5-----" << endl;
      continue;
    }

neural_output


byflat
2leading integral : 0.902139
minmass integral : 0.887605
neural05 integral : 0.897668
neural06 integral : 0.901096
neural055 integral : 0.898418


ttbar_le21_le100 needed



leading jet reset!!

17272

15842

MVA_BDT_rejBvsS__2 : 0.907581

-0.1~0.2






le21
cut> : efficiency(quark) = -0.028 : 0.190593
cut> : efficiency(notquark) = -0.028 : 0.371348


gt21
cut> : efficiency(quark) = -0.049 : 0.200133
cut> : efficiency(notquark) = -0.049 : 0.267456


-0.2~0.4
-0.15~0.1


le21_quark61 : 0.799015
le21_notquark61 : 0.606088

gt21_quark61.4 : 0.799041
gt21_notquark61.4 : 0.787774


try : 0.864196

neural: VBS/(VBS+ttbar+lep)3.09919e-06/(3.09919e-06+0.000147926+0.000206132 = 0.00867737




-----ievt653136
pdgid=3:: deepset : energyflow = 0.903969 : 0.92087
-----ievt653113
pdgid=3:: deepset : energyflow = 0.950303 : 0.954852
-----ievt653043
pdgid=1:: deepset : energyflow = 0.913577 : 0.923486
-----ievt653040
pdgid=1:: deepset : energyflow = 0.94526 : 0.907104
-----ievt653029
pdgid=3:: deepset : energyflow = 0.982433 : 0.97082




/home/chengyu/paper/VBS/neural_network/output/score_output/prob/IRCsafe/IRC_test.root


H7EG
le21_le1000
quark:49957790
gluon:131765300


le21_le2000
quark:66706260
gluon:139379400

Both of the string and cluster models (i.e. PYTHIA and HERWIG) 



















\documentclass[a4paper,12pt]{book}
\usepackage{float}
\usepackage{cite}
\usepackage{comment}
\usepackage{physics}
\usepackage{amsmath,graphicx,epsfig,color}
\usepackage[dvipdfmx,setpagesize=false,hidelinks]{hyperref}
\usepackage{indentfirst}
\usepackage{natbib}
\usepackage{cleveref}
\usepackage{gensymb}
\usepackage{mathtools}
\usepackage{amsmath}
\usepackage{lineno}
\usepackage{multirow}
\usepackage{url}
\usepackage{titlesec}
%\usepackage{atlasphysics}
\usepackage{amsfonts}
\usepackage{amssymb}
\newcommand{\myvect}[1]{\accentset{\rightharpoonup}}








float threshold_cut[1000];
  float num_evt[1000];

  for(int i=0; i<1000; i++){
    threshold_cut[i] = 0.001 + 0.001*i;
    num_evt[i] = 0;
  }

  float threshold = 0;
  float allevt = 0;
  TTree* threshold_tree = new TTree("threshold", "threshold");
  threshold_tree->Branch("threshold_cut", &threshold);
  threshold_tree->Branch("num_evt", &allevt);












for(int i=0; i<1000; i++){
	if(std::abs(jet_tlv.at(neural_jet_1st_tem).Eta()) < 2.1){
	  if(prob_vec.at(neural_jet_1st_tem) <= threshold_cut[i]) continue;
	}
	if(std::abs(jet_tlv.at(neural_jet_1st_tem).Eta()) > 2.1){
	  //if(prob_vec.at(neural_jet_1st_tem) <=0.46591) continue;
	}
    
	if(std::abs(jet_tlv.at(neural_jet_2nd_tem).Eta()) < 2.1){
	  if(prob_vec.at(neural_jet_2nd_tem) <= threshold_cut[i]) continue;
	}
	if(std::abs(jet_tlv.at(neural_jet_2nd_tem).Eta()) > 2.1){
	  //if(prob_vec.at(neural_jet_2nd_tem) <=0.46591) continue;
	}

	if(std::abs(jet_tlv.at(tag_1st).Eta()) < 2.1){
	  if(prob_vec.at(tag_1st) <= threshold_cut[i]) continue;
	}
	if(std::abs(jet_tlv.at(tag_1st).Eta()) > 2.1){
	  //if(prob_vec.at(tag_1st) <=0.46591) continue;
	}
    
	if(std::abs(jet_tlv.at(tag_2nd).Eta()) < 2.1){
	  if(prob_vec.at(tag_2nd) <= threshold_cut[i]) continue;
	}
	if(std::abs(jet_tlv.at(tag_2nd).Eta()) > 2.1){
	  //if(prob_vec.at(tag_2nd) <=0.46591) continue;
	}

	num_evt[i] = num_evt[i] + weight_neural;
neural_cut[i] =  -0.1 + 0.35*0.01*i;
      





 TH2D* h2_significance_2cut = new TH2D("h2_significance", "h2_significance", 100,-0.1 ,0.197 ,100, -0.1,0.2465);

passion distribution error
RooStats::NumberCountingUtils::BinomialExpZ(37, 129, 0.2)

MC + systematic
sqrt(0.2 * 0.2 + 0.1 * 0.1)


VBS : 137085

lep : 2238426

ttbar : 1259226




0.75441

float etaj1_2elading = 0;
  float etaj2_2leading = 0;
  float etatagj1_2leading = 0;
  float etatagj2_2leading = 0;
  float labelj1_2leading = 0;
  float labelj2_2leading = 0;
  float labeltagj1_2leading = 0;
  float labeltagj2_2leading = 0;

pdgid_tem

delta


5hnwntwyieeu




if(met_met/1000 <= 80) continue;

h1_met_allcut->Fill(met_met/1000, weight);









TFile* CNN_file = new TFile(“try/CNN_prob_sjet_le21_BDTinput_revised_new.root");

TFile* DNN_file = new TFile(“try/DNN_prob_sjet_le21_BDTinput_revised_new.root");

TFile* DNN_CNN_file = new TFile(“try/DNN_CNN_prob_sjet_le21_BDTinput_revised_new.root");

TFile* conv1d_file = new TFile(“try/conv1d_prob_sjet_le21_energyflow_BDTinput_revised_new.root");

TFile* conv1d_flat_file = new TFile(“try/conv1d_prob_sjet_le21_BDTinput_revised_new.root");


/home/chengyu/paper/H7EG/root_numpy/rootfile/pTbin/distribution
